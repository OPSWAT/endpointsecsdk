/****** THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT OR YOUR CHANGES WILL BE OVERWRITTEN! ******/
#pragma once
/**	@file wa_api_config_options.h
 *	@brief Defines our configuration option keys and their purpose.
 *	@defgroup waapi_configuration Configurations
 */

/**
 *	@brief Configuration key for enabling/disabling pretty printing of JSON output returned in @c json_out from @ref wa_api_invoke invocations
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_PRETTY_PRINT L"enable_pretty_print"

/**
 *	@brief (Deprecated) Configuration key for enabling/disabling COM concurrency model. Windows only.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_COM_MULTITHREADED L"com_multithreaded_model"

/**
 *	@brief Configuration key to set the location of the database. Allows you to specify the location of the database in your deployment. This is the location where your offline resources (libwaresource.dll) will be located. This may be a relative path from the location of the MDES SDK deployment, but must begin with '.' to represent the working directory. By default, the database will be read from the directory of your MDES SDK deployment.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_DATABASE_LOCATION L"database_location"

/**
 *	@brief Configuration key to set the location of component libraries. This is the location where the MDES SDK will look when trying to load external MDES SDK modules, such as Manageabilty or Removal. This may be a relative path from the location of the MDES SDK deployment, but must begin with '.' to represent the working directory. By default, the location will be the directory of your MDES SDK deployment.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_COMPONENT_LOCATION L"component_location"

/**
 *	@brief Configuration key for enabling/disabling on-line mode. If disabled, the database files must be created and deployed with the libraries.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_ONLINE_MODE L"online_mode"

/**
 *	@brief Configuration key for enabling/disabling silent mode. If enabled, the client will not talk to V4 servers.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_SILENT_MODE L"silent_mode"

/**
 *	@brief Configuration key for setting the location of the RESTful service for database updates
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_SERVER_NAME L"server_name"

/**
 *	@brief Configuration key for setting the location of the HTTP port to use
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_SERVER_PORT L"server_port"

/**
 *	@brief Configuration key for setting the location of the RESTful licensing service for database updates
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_LICENSE_SERVER_NAME L"license_server_name"

/**
 *	@brief Configuration key for setting the location of the HTTP port to use
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_LICENSE_SERVER_PORT L"license_server_port"

/**
 *	@brief Configuration key for setting the HTTP timeout
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_SERVER_TIMEOUT L"server_timeout"

/**
 *	@brief Configuration key for enabling/disabling caching to disk for dynamically updated runtime data. NOTE: There are potential performance implications if caching is disabled, especially if using online mode.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_CACHING L"caching"

/**
 *	@brief Configuration key for setting the write location for the cache files. This location must have appropriate write permissions for the caller. This may be a relative path from the location of the MDES SDK deployment, but must begin with '.' to represent the working directory. By default, the database will be read from the directory of your MDES SDK deployment.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_CACHE_LOCATION L"cache_location"

/**
 *	@brief Configuration key for enabling/disabling updating the license.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_LICENSE_UPDATE L"license_update"

/**
 *	@brief Configuration key for setting the location of the license. This may be a relative path from the location of the MDES SDK deployment, but must begin with '.' to represent the working directory.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_LICENSE_LOCATION L"license_location"

/**
 *	@brief Configuration key for the language of error code descriptions, using UTF-8 standard. REMARKS: This option is currently not supported, but support is planned for a future release.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_LANGUAGE L"language"

/**
 *	@brief Configuration key for URI prefix. This is used for configuring access to resources when using online mode.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_URI_PREFIX L"uri_prefix"

/**
 *	@brief Configuration key for license key byte string. Can be used in place of the key portion of the license.cfg file. This equates to the value found at 'license_key' in the license.cfg json.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_LICENSE_KEY_BYTES L"license_key_bytes"

/**
 *	@brief Configuration key for license byte string. Can be used in place of the license portion of the license.cfg file. This equates to the value found at 'license' in the license.cfg json. If this option is used then automatic license updating is not supported and WAAPI_CONFIG_LICENSE_KEY_BYTES must be specified.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_LICENSE_BYTES L"license_bytes"

/**
 *	@brief Configuration key for the pass key string that was provided with the license file.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_PASSKEY_KEY L"passkey_string"

/**
 *	@brief Configuration key for deployment location string. This is the location of libwaapi.dll, libwautils.dll and libwaheap.dll. This parameter cannot be changed, but is available in the setup output as a convenience.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_DEPLOYMENT_LOCATION L"deployment_location"

/**
 *	@brief Configuration key for enabling/disabling secure-cache mode. If disabled, signatures of the database files will not be checked by MDES SDK.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_SECURE_CACHE L"secure_cache"

/**
 *	@brief Configuration key for enabling/disabling service mode. If the integrating application is running in a service context then this option should be enabled.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_SERVICE_MODE L"service_mode"

/**
 *	@brief Configuration key for selecting web proxy type. Possible values are: 'NoProxy', 'ProxyNamed', 'ProxyReg', 'ProxyIE', 'ProxyAutoDiscover'. NoProxy: access internet directly. ProxyNamed: access internet through proxy specified by proxy name and proxy port. ProxyReg: access internet by detecting proxy settings in registry path HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\Connections. ProxyIE: access internet with proxy settings from Internet Explorer. ProxyAutoDiscover: access internet by detecting proxy settings automatically by DHCP or DNS.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_PROXY_TYPE L"proxy_type"

/**
 *	@brief Configuration key for http proxy name/ip address.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_PROXY_NAME L"proxy_name"

/**
 *	@brief Configuration key for VMod's online secure protocols. Possible values are: 'SECURE_PROTOCOL_TLS1', 'SECURE_PROTOCOL_TLS1_1', 'SECURE_PROTOCOL_TLS1_2', 'SECURE_PROTOCOL_TLS1_3'. SECURE_PROTOCOL_TLS1: use TLS v1.0 or later. SECURE_PROTOCOL_TLS1_1: use TLS v1.1 or later. SECURE_PROTOCOL_TLS1_2: use TLS v1.2 or later. SECURE_PROTOCOL_TLS1_3: use TLS v1.3 or later.
 *	@ingroup waapi_configuration
 */
#define WA_VMOD_CONFIG_OPTION_SECURE_PROTOCOL L"secure_protocol"

/**
 *	@brief Configuration key for VMod's online custom header for url
 *	@ingroup waapi_configuration
 */
#define WA_VMOD_CONFIG_ONLINE_CUSTOM_HEADER L"online_custom_header"

/**
 *	@brief Configuration key for http proxy port.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_PROXY_PORT L"proxy_port"

/**
 *	@brief Configuration key for http proxy auto logon policy. Possible values are: 'low', 'medium' and 'high'. low: An authenticated log on using the default credentials is performed for all requests. medium: An authenticated log on using the default credentials is performed only for requests on the local Intranet. high: Default credentials are not used.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_PROXY_AUTOLOGON_POLICY L"proxy_autologon_policy"

/**
 *	@brief Configuration key for enabling mockup mode. This will allow API invoke calls to be made where the output results are hardcoded to return specific values. This requires the mockup.json file to be present in the waapi deployment directory.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_MOCKUP_MODE L"mockup_mode"

/**
 *	@brief Configuration key for Infection Module. This will apply a Metadefender API key and use this key for scanning.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_CUSTOM_METASCAN_ONLINE_KEY L"custom_metascan_online_key"

/**
 *	@brief Configuration key for Infection Module. This key specifies a local Metadefender server address with port. Correct format is 'server:port'.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_TARGET_METASCAN_SERVER L"target_metascan_server"

/**
 *	@brief Configuration key for Infection Module. This key specifies which Metadefender engines are to be used for scanning.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_METASCAN_ENGINES_INCLUDED L"metascan_engines_included"

/**
 *	@brief Configuration key for Infection Module. This key specifies which Metadefender engines are to be excluded from scanning.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_METASCAN_ENGINES_EXCLUDED L"metascan_engines_excluded"

/**
 *	@brief Configuration key for Infection Module. This key specifies which Metadefender sources are to be used for scanning.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_METASCAN_SOURCES_INCLUDED L"metascan_sources_included"

/**
 *	@brief Configuration key for Infection Module. This key specifies which Metadefender sources are to be excluded from scanning.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_METASCAN_SOURCES_EXCLUDED L"metascan_sources_excluded"

/**
 *	@brief Configuration key for Infection Module. Maximum file size that's permitted to be hashed.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_INFECTION_MAX_FILE_SIZE_HASHED_MB L"infection_max_file_size_hashed_mb"

/**
 *	@brief Configuration key for Infection Module. Configures maximum file chunk size permitted to upload to Metadefender.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_INFECTION_MAX_CHUNK_SIZE_KB L"infection_max_chunk_size_kb"

/**
 *	@brief Configuration key for Infection Module. Signals whether the cache should be cleaned or not.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_REFRESH_INFECTION_DATABASE L"refresh_infection_database"

/**
 *	@brief Configuration key for Infection Module. Defines how many items (file names or addresses) will be stored in memory for queued scanning operations.</br>Minimum Batch Size: 10</br>Maximum Batch Size: 1000
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_INFECTION_BATCH_SIZE L"infection_batch_size"

/**
 *	@brief Configuration key for the asynchronous API. Possible values are: 0 (completely disabled), 1 (fully enabled), 2 (mixed mode). If disabled then 'async_job' keys on invoke calls will be ignored. If fully enabled then all calls will be made asynchronosly, regardless of 'async_job' key status. Partially enabled will allow calls to be made either synchronously or asynchronosly based on the 'async_job' invoke flag. Calls without the 'async_job' flag will automatically be synchronous in mixed mode.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_ASYNC_API_MODE L"async_api_mode"

/**
 *	@brief Configuration key for json IO type validation. If true, all required input and output json keys will be checked for existence and type correctness. Will add computation overhead on every call and is not recommended for production.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_JSON_IO_VALIDATION L"json_io_validation"

/**
 *	@brief Configuration key for filtering json_out error data. If true, all error message inside json_out will be filtered out in case the returned code by wa_api_invoke is a success code. Will add computation overhead on every call and is not recommended for production.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_SKIP_MINOR_ERROR_MESSAGE L"skip_minor_error_message"

/**
 *	@brief Configuration key for specifying that setup should try to use less CPU and system resources during initialization. This has potentially significant impacts on setup performance and can add many seconds to the overall setup time.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_LOW_RESOURCE_SETUP L"low_resource_setup"

/**
 *	@brief Configuration key for specifying which folders to skip during the application bundle search. Possible values are any combination of the following, separated by | (vertical bar): user_home, shared_folder, removable_media, reminders, photos, calendars, contacts (example: user_home|shared_folder). macOS only.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_RESTRICT_BUNDLE_SEARCH L"restrict_bundle_search"

/**
 *	@brief Configuration key for specifying prefix to VMod's online database to support online mode for some functions. It only supports HTTP/HTTPs.
 *	@ingroup waapi_configuration
 */
#define WA_VMOD_CONFIG_ONLINE_DATABASE_URI L"online_database_uri"

/**
 *	@brief Configuration key for web proxy password.
 *	@ingroup waapi_configuration
 */
#define WA_VMOD_CONFIG_PROXY_PASSWORD L"vmod_proxy_password"

/**
 *	@brief Configuration key for web proxy username. To use proxy with differnt domain name than the current domain. The input string to the method must uses double backslashes like 'domain\\user' so it becomes quadruple backslashes in a json string
 *	@ingroup waapi_configuration
 */
#define WA_VMOD_CONFIG_PROXY_USER L"vmod_proxy_username"

/**
 *	@brief Configuration key for generating and packaging libwaresource that include some desired database used for MDES SDK Next-gen Tool.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_SUPPORT_NEXTGEN_TOOL L"support_nextgen_tool"

/**
 *	@brief Configuration key for enable/disable print debug stuff to console.
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_CONSOLE_DEBUG L"console_debug"

/**
 *	@brief Configuration key for VMod's online miss expired time in seconds.
 *	@ingroup waapi_configuration
 */
#define WA_VMOD_CONFIG_ONLINE_MISS_EXPIRED_TIME L"online_miss_expired_time"

/**
 *	@brief Configuration key for VMod's online hit expired time in seconds.
 *	@ingroup waapi_configuration
 */
#define WA_VMOD_CONFIG_ONLINE_HIT_EXPIRED_TIME L"online_hit_expired_time"

/**
 *	@brief Configuration key to set the amount of fixed-size objects that each memory pool can allocate. Possible values are in [0-1000000]. Zero means to disable memory pool feature
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_OBJECTS_PER_MEMORY_POOL L"objects_per_memory_pool"

/**
 *	@brief (Windows only) Configuration key to set encryption api for using. Possible values are: 'CNG', 'CryptoAPI'. CNG: use Windows Cryptography API: Next Generation. CryptoAPI: use Windows Cryptography API. If this key is not set, the default value is 'CNG'
 *	@ingroup waapi_configuration
 */
#define WAAPI_CONFIG_ENCRYPTION_API L"encryption_api"
