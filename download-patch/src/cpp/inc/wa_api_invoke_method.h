/****** THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT OR YOUR CHANGES WILL BE OVERWRITTEN! ******/
#pragma once
/**	@file wa_api_invoke_method.h
 *	@brief Defines method identifiers for all non-common methods. Defined method identifiers are implemented on a per-product basis, and all in/out parameters are JSON keys in the json_in/json_out parameters of @ref wa_api_invoke
 *	@defgroup waapi_methods Methods
 */

/**
 *	@brief Will determine if the product is currently providing real time protection. <br>If Windows SecurityCenter is enabled and the product reports to SecurityCenter then this method is implemented even if the product does not explicitly state that it is implemented.
 *	@ingroup waapi_methods
 *
 *	@param[in] skip_connection_check:<boolean> If true, it will not check the internet connection on the endpoint. Default value is false.
 *	@param[out] enabled:<boolean> True if all forms of real time protection are enabled.
 *	@param[out] has_internet_connectivity:<boolean> (EDR products only) Will return the internet connectivity of this product. Will be disappeared when flag skip_connection_check is enabled.
 *	@param[out] details:<object> Will contain a key for each form of protection, named by type and whether it was enabled.
 *	@param[out] details.antivirus:<boolean> Indicates if the RTP antivirus based protection is being provided. Will not be present if the RTP does not contain antivirus capabilities.
 *	@param[out] details.antispyware:<boolean> Indicates if the RTP antispyware based protection is being provided. Will not be present if the RTP does not contain antispyware capabilities.
 *	@param[out] details.other:<array<object>> Will contain a key for each form of additional protection (besides antivirus and antispyware). Will not be present if the product does not contain additional protection component.
 *	@param[out] details.other.name:<string> Additional protection component name.
 *	@param[out] details.other.state:<boolean> Indicates if the additional component protection is being provided.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_RTP_STATE 1000

/**
 *	@brief Will enable all possible forms of real time protection (this does not include firewall or antiphishing).
 *	@ingroup waapi_methods
 *
 *	@param[in] uninstallCode:<string> (Carbon Black only) The code is used to turn on the RTP.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_ENABLE_RTP 1005

/**
 *	@brief Will get information about the AntiMalware definitions. Will retreive the time the defs were last updated, and (where available) the time the definitions were made available from the source. For convenience provides a boolean value to determine if the definitions are recent. <br>If Windows SecurityCenter is enabled and the product reports to SecurityCenter then this method is implemented even if the product does not explicitly state that it is implemented.
 *	@ingroup waapi_methods
 *
 *	@param[in] timeframe:<number> The timeframe in days used to determine if the update is recent, the default setting is 3.
 *	@param[in] skip_connection_check:<boolean> If true, it will not check the internet connection on the endpoint. Default value is false.
 *	@param[out] is_recent:<boolean> True if the source date, or last update are recent.
 *	@param[out] has_internet_connectivity:<boolean> (EDR products only) Will return the internet connectivity of this product. Will be disappeared when flag skip_connection_check is enabled.
 *	@param[out] definitions:<array<object>> The array of information about the definitions.
 *	@param[out] definitions.name:<string> Name of component to which definitions belong. This key is not a general value, can be different for different products.
 *	@param[out] definitions.type:<string> Type of component to which definitions belong: could be 'antimalware', 'antivirus' or 'antispyware'.
 *	@param[out] definitions.version:<string> The version of the definitions if they are versioned.
 *	@param[out] definitions.engine_version:<string> The engine version if available and seperate from definition version.
 *	@param[out] definitions.last_update:<string> Returns the unix time for the time the definition was last obtained (GMT).
 *	@param[out] definitions.source_time:<string> Returns the unix time for the time the product reports the definitions were made available (GMT).
 *	@param[out] definitions.count:<number> Returns the number of supported malware signatures.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_DEF_STATE 1001

/**
 *	@brief Will begin an update of malware definitions. Returns success if the update was started successfully, but does not signify that an update succeeded.
 *	@ingroup waapi_methods
 *
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_UPDATE_DEFINITIONS 1003

/**
 *	@brief Will get the most recent threat log and status.
 *	@ingroup waapi_methods
 *
 *	@param[out] last_threat_time:<string> Timestamp of last time a threat was found on the system, '0' if no threats have been found or times cannot be determined.
 *	@param[out] no_threats:<boolean> Returns true if the product indicates there are no unremediated threats on the system, if no evidence or determination of unremediated threats can be made it will return true.
 *	@param[out] threats:<array<object>> An array of information on the threats found on the system.
 *	@param[out] threats.threat_name:<string> The name of the threat found.
 *	@param[out] threats.path:<string> The file path of the file where the threat was detected.
 *	@param[out] threats.scan_time:<string> The time the threat was found in unix time (GMT).
 *	@param[out] threats.remediation:<string> The type of remediation (none, unknown, cleaned, deleted, quarantined, or partial).
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_THREATS 1002

/**
 *	@brief Will determine when the last successful malware scan occurred on the system.
 *	@ingroup waapi_methods
 *
 *	@param[in] scan_type:<string> The type of scan to get the time for: 'full', 'default' or 'path' (equivalent to the types in the Scan method). If not provided, the type of the last scan time will be ignored.
 *	@param[out] scan_time:<string> The last scan time in unix time (GMT).
 *	@param[out] scan_type:<string> The type of scan that the time is for: 'full', 'default', 'path' or 'unspecified' (in cases where the scan type could not be differentiated).
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_LAST_SCAN_TIME 1004

/**
 *	@brief Will perform a scan on the file, directory, or entire system. The scan will be performed synchronously in the case of file and folder scans and asynchronously for full scans, i.e. the scan will be executed and immediately return without waiting for the product.
 *	@ingroup waapi_methods
 *
 *	@param[in] scan_type:<string> 'full' for full system scans, 'default' for a default scan (if defined) or 'path' for a scan using a system path.
 *	@param[in] path:<string> The full path to a file, or folder. Only used in the case where scan_type = 'path'.
 *	@param[in] clean:<boolean> Specifies whether an attempt should be made to clean threats detected during the scan. This is an attempt, but cleaning is not always possible. Default is false.
 *	@param[out] malware_found:<boolean> Returns true if the scan detected any malware. *NOTE*: 'malware_found' will not exist in the case of a 'full' or 'default' scan, or if the clean operation could not be performed.
 *	@param[out] clean:<boolean> Indicates the state of the affected area after the scan. *NOTE*: 'clean' will not exist in the case of a 'full' or 'default' scan, or if the clean operation could not be performed.
 *	@param[out] threats:<array<object>> An array of information on the threats found from this scan operation. Only used in the case where scan_type = 'path' and threats information is available.
 *	@param[out] threats.threat_name:<string> The name of the threat found.
 *	@param[out] threats.path:<string> The file path of the file where the threat was detected.
 *	@param[out] threats.scan_time:<string> The time the threat was found in unix time (GMT).
 *	@param[out] threats.remediation:<string> The type of remediation (none, cleaned, deleted, quarantined, or partial).
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_SCAN 1006

/**
 *	@brief Will determine if an Antimalware scan is currently running.
 *	@ingroup waapi_methods
 *
 *	@param[out] state:<boolean> True if a scan is currently in progress.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_SCAN_STATE 1022

/**
 *	@brief Will determine the firewall is currently providing protection. <br>If Windows SecurityCenter is enabled and the product reports to SecurityCenter then this method is implemented even if the product does not explicitly state that it is implemented.
 *	@ingroup waapi_methods
 *
 *	@param[in] show_profile_details:<boolean> (Windows Firewall only) If true, will show some more details about the active profiles. Default value is 'false'.
 *	@param[out] enabled:<boolean> True if firewall protection is enabled.
 *	@param[out] profile_details:<object> (Windows Firewall only) The object of information about the profile.
 *	@param[out] profile_details.(public or private or domain):<object> (Windows Firewall only) The object of information about the (public or private or domain) profile.
 *	@param[out] profile_details.(public or private or domain).enabled:<boolean> (Windows Firewall only) True if the FW is enaled for this profile. If false, other properties will not be shown.
 *	@param[out] profile_details.(public or private or domain).block_inbound_connections:<boolean> (Windows Firewall only) True if the block inbound connections is enabled.
 *	@param[out] profile_details.(public or private or domain).has_allow_all_outbound_rule:<boolean> (Windows Firewall only) True if there is at least one outbound rule which will allow all traffic for the current profile.
 *	@param[out] profile_details.(public or private or domain).block_all_inbound_connections:<boolean> (Windows Firewall only) True if the block all inbound connections is enabled.
 *	@param[out] profile_details.(public or private or domain).block_outbound_connections:<boolean> (Windows Firewall only) True if the block outbound connections is enabled.
 *	@param[out] profile_details.(public or private or domain).has_allow_all_inbound_rule:<boolean> (Windows Firewall only) True if there is at least one inbound rule which will allow all traffic for the current profile.
 *	@param[out] profile_details.(public or private or domain).has_block_inbound_rule:<boolean> (Windows Firewall only) True if there is at least one inbound rule which will block traffic for the current profile.
 *	@param[out] profile_details.(public or private or domain).has_block_outbound_rule:<boolean> (Windows Firewall only) True if there is at least one outbound rule which will block traffic for the current profile.
 *	@param[out] managed_by_3rd_party_products:<array<object>> (Windows Firewall only) An array of information about third party products manage Windows Firewall.
 *	@param[out] managed_by_3rd_party_products.displayName:<string> (Windows Firewall only) The name of third party products manage Windows Firewall.
 *	@param[out] managed_by_3rd_party_products.pathToSignedProductExe:<string> (Windows Firewall only) The path of third party products manage Windows Firewall.
 *	@param[out] managed_by_3rd_party_products.signature:<number> (Windows Firewall only) The signature of third party products manage Windows Firewall.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_FIREWALL_STATE 1007

/**
 *	@brief Will enable or disable the firewall protection state.
 *	@ingroup waapi_methods
 *
 *	@param[in] operation:<string> The operation to be done. Should be 'enable' or 'disable'.
 *	@param[in] password:<string> The password required by the product to modify the application state.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_SET_FIREWALL_STATE 1015

/**
 *	@brief Will retrieve information on the locations that are backed up, the last time they were backed up and where the backups are kept.
 *	@ingroup waapi_methods
 *
 *	@param[out] last_backup_activity:<string> The last backup time as time (GMT).
 *	@param[out] backup_active:<boolean> Returns true if the backup mode is turned on.
 *	@param[out] backups:<array<object>> An array of backup information.
 *	@param[out] backups.path:<string> The path on the system that is being backed up.
 *	@param[out] backups.time_started:<string> The start time of the backup in unix time (GMT).
 *	@param[out] backups.time_ended:<string> The finish time of the backup in unix time (GMT).
 *	@param[out] backups.type:<string> The type of backup that was performed: 'partial' or 'system'.
 *	@param[out] backups.device:<string> The device type of the backup: 'local', 'network', 'cloud', 'tape', 'disc'.
 *	@param[out] backups.status:<string> The state of the backup: 'success', 'in_progress', 'paused', 'failed', 'unknown'.
 *	@param[out] backups.destination:<string> The path on the system or the address depending on the 'device'.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_BACKUP_STATE 1008

/**
 *	@brief Will determine what locations are currently encrypted. Directory paths will always end in '\'
 *	@ingroup waapi_methods
 *
 *	@param[in] password:<string> The password required by the product to modify the application state.
 *	@param[out] fully_encrypted:<boolean> Returns true if the entire encryptable file system is encrypted.
 *	@param[out] encryption_active:<boolean> Returns true if the product is actively being used for encryption. (FileVault only: will be true if FileVault is turned on, otherwise false).
 *	@param[out] support_wde:<boolean> Returns true if a product supports whole disk encryption.
 *	@param[out] locations:<array<object>> An array of information on encrypted locations.
 *	@param[out] locations.path:<string> The path to encrypted drive, folder or file.
 *	@param[out] locations.type:<string> The location type: 'physical', 'virtual', 'removable', 'directory', 'archive', 'file', 'unknown'.
 *	@param[out] locations.state:<string> The encryption state: 'unencrypted', 'encrypted', 'suspended', 'partial', 'unknown'.
 *	@param[out] locations.algorithm:<string> The type of encryption used: 'aes', 'rsa', 'blowfish', '3des'. Others options may be added in the future.
 *	@param[out] locations.strength:<number> The strength of encryption used. This is the bit-ness of the encryption, e.g. 128, 256, etc.
 *	@param[out] locations.encryptable:<boolean> Specifies if the product is encryptable or not.
 *	@param[out] locations.encryption_type:<string> (FileVault only) Will be 'hardware' - in the case of current encryption managed by T2/M1 chip, otherwise 'software'.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_ENCRYPTION_STATE 1009

/**
 *	@brief Will determine if antiphishing protection is enabled.
 *	@ingroup waapi_methods
 *
 *	@param[out] enabled:<boolean> True if antiphishing protection is enabled.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_ANTIPHISHING_STATE 1010

/**
 *	@brief Will enable or disable the antiphising protection state.
 *	@ingroup waapi_methods
 *
 *	@param[in] operation:<string> The operation to be done. Should be 'enable' or 'disable'.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_SET_ANTIPHISING_STATE 1025

/**
 *	@brief Determine if the given product is the default browser.
 *	@ingroup waapi_methods
 *
 *	@param[out] is_default:<boolean> True if the product is the default browser.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_IS_DEFAULT_BROWSER 1011

/**
 *	@brief Will determine if the product's agent is enabled.
 *	@ingroup waapi_methods
 *
 *	@param[out] enabled:<boolean> True if the patch management agent is enabled.
 *	@param[out] status:<string> Status of the agent: 'good', 'poor', 'unmonitored', 'snooze' or 'unknown'.<br>There are also 'idle' and 'pending_restart' statuses, which were designed specifically for Windows Update Agent to describe the status of the system.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_AGENT_STATE 1012

/**
 *	@brief Will turn on or off the patch management agent.
 *	@ingroup waapi_methods
 *
 *	@param[in] operation:<string> The operation to be done. Options are 'enable' or 'disable'.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_SET_AGENT_STATE 1021

/**
 *	@brief Will retrieve a list of reported missing patches.
 *	@ingroup waapi_methods
 *
 *	@param[in] username:<string> The name required by the product to retrieve the necessary data.
 *	@param[in] password:<string> The password required by the product to retrieve the necessary data.
 *	@param[in] timeout:<number> A timeout value in seconds that can be set to this method call. Default value is 0 (infinite).
 *	@param[in] retry_internet_services:<boolean> (Windows Update Agent only) If true, will retry with the internet services when failed with managed servers (if they are configured, such as WSUS, Configuration Server). Default value is true.
 *	@param[in] token:<string> The API token required by the product to retrieve the necessary data.
 *	@param[in] mode:<number> (Windows Update Agent only) 0: Detect as many available patches on the current device as possible. 1: Detects patches like Windows Update UI. Default value is 0.
 *	@param[out] patches:<array<object>> An array of missing patches detected for the product.
 *	@param[out] patches.id:<string> The id of a missing patch.
 *	@param[out] patches.title:<string> The title of a missing patch.
 *	@param[out] patches.description:<string> The description of a missing patch.
 *	@param[out] patches.revision:<number> The current revision of a missing patch.
 *	@param[out] patches.product:<string> The product missing this patch.
 *	@param[out] patches.vendor:<string> The vendor of the product missing this patch.
 *	@param[out] patches.severity:<string> The severity of a missing patch: 'low', 'moderate', 'important', 'critical', 'unknown'.
 *	@param[out] patches.category_id:<string> The id of the category this update belongs to.
 *	@param[out] patches.category:<string> The category of a missing patch: 'security_update', 'update_rollup', 'critical_update', 'update', 'driver', 'service_pack', 'unknown'.
 *	@param[out] patches.category_description:<string> The description of the current category.
 *	@param[out] patches.category_parent:<string> The name of parent category.
 *	@param[out] patches.security_update_id:<string> The security update id of a missing patch. This is equivalent to Security Bulletin ids for Windows, Security Update ids for Apple, and various Security Alert ids for Linux.
 *	@param[out] patches.kb_id:<string> The knowledge base article id of a missing patch. May duplicate security_update_id on some platforms.
 *	@param[out] patches.date:<string> The release date of the patch, as a timestamp.
 *	@param[out] patches.size:<number> The size of the patch, in bytes.
 *	@param[out] patches.reboot_required:<boolean> Indicates if the patch requires a system reboot or not.
 *	@param[out] patches.optional:<boolean> (Windows Update Agent only) Indicates whether the patch is an optional update as defined by Microsoft in the DeploymentAction field. The True value corresponds to the "daOptionalInstallation=4" value from Microsoft.
 *	@param[out] patches.deployment_action:<number> (Windows Update Agent only) Defines the action for which an update is explicitly deployed. 0: No explicit deployment action is specified on the update, the update inherits the value from its bundled updates. 1: The update should be installed on the computer and/or for the specified user. 2: The update should be uninstalled from the computer and/or for the specified user. 3: The update is deployed only to determine the applicability of the update, the update will not be installed. 4: The update may be installed on the computer and/or for the specified user.
 *	@param[out] patches_source:<string> (Windows Update Agent only) The source supplying patches: 'Windows Update', 'Microsoft Update', 'WSUS or Configuration Manager', 'Unknown', or the file path to the wsusscn2.cab in case WUA works in offline mode
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_MISSING_PATCHES 1013

/**
 *	@brief Will install given missing patches detected by the last call to GetMissingPatches.
 *	@ingroup waapi_methods
 *
 *	@param[in] threads:<number> The number of threads using to download patches, equal to number of patches can be downloaded at the same time. Default value = 4.
 *	@param[in] install_from_cache:<boolean> An array of missing patches to be installed.Indicates if this method will using cache that downloaded by DownloadMissingPatches or it will get patches from internet. Default is false.
 *	@param[in] retry_internet_services:<boolean> (Windows Update Agent only) If true, will retry with the internet services when failed with managed servers (if they are configured, such as WSUS, Configuration Server). Default value is true
 *	@param[in] patches:<array<object>> An array of missing patches to be installed.
 *	@param[in] patches.title:<string> The title of a missing patch, this value should be got from the return of GetMissingPatches.
 *	@param[in] patches.product:<string> The product a missing patch will be installed for, this value should be got from the return of GetMissingPatches.
 *	@param[in] patches.vendor:<string> The vendor of the product a missing patch will be installed for, this value should be got from the return of GetMissingPatches.
 *	@param[out] patches:<array<object>> An array of missing patches that input by user. So far only available on Windows for Windows Update Agent.
 *	@param[out] patches.title:<string> The title of a patch.
 *	@param[out] patches.product:<string> The product of this patch.
 *	@param[out] patches.vendor:<string> The vendor of the product a missing patch. Only available if user input it in json_in.
 *	@param[out] patches.state:<string> The state of a patch after this method completed. It can be: 'not_found' - if patch was not found in result of GetMissingPatches, 'not_found_in_cache' - if this patch was not found in cache downloaded by DownloadMissingPatches, only available in case install_from_cache = true, 'download_failed' - if patch failed in download phase, 'cache_failed' - if patch was found in MetaDefender Endpoint Security SDK cache but can not use it to install patch, 'install_failed' - patch was download successful but install failed, 'installed' - patch was install successful.
 *	@param[out] patches.reboot_required:<boolean> It will be true if this patch require 'reboot' to complete installation phase. (Windows only: It should be 'Update and Restart' if available)
 *	@param[out] patches_source:<string> (Windows Update Agent only) The source supplying patches: 'Windows Update', 'Microsoft Update', 'WSUS or Configuration Manager', 'Unknown', or the file path to the wsusscn2.cab in case WUA works in offline mode
 *	@returns The results of this function are determined by the error code returned by the call. If there is no patch was installed, this method will return WAAPI_OK_FALSE, if all patches was download successful, it will return WAAPI_OK, and it will return WAAPI_PARTIAL_SUCCESS if this have both failed and success patch. For detail state of each patch, check patches.state in results.
 */
#define WAAPI_MID_INSTALL_MISSING_PATCHES 1014

/**
 *	@brief Will download given missing patches detected by the last call to GetMissingPatches, keep it in MetaDefender Endpoint Security SDK cache and can be reuse later in InstallMissingPatches.
 *	@ingroup waapi_methods
 *
 *	@param[in] threads:<number> The number of threads using to download patches, equal to number of patches can be downloaded at the same time. Default value = 4.
 *	@param[in] retry_internet_services:<boolean> (Windows Update Agent only) If true, will retry with the internet services when failed with managed servers (if they are configured, such as WSUS, Configuration Server). Default value is true
 *	@param[in] patches:<array<object>> An array of missing patches to be downloaded.
 *	@param[in] patches.title:<string> The title of a missing patch, this value should be got from the return of GetMissingPatches.
 *	@param[in] patches.product:<string> The product a missing patch will be downloaded for, this value should be got from the return of GetMissingPatches.
 *	@param[in] patches.vendor:<string> The vendor of the product a missing patch will be downloaded for, this value should be got from the return of GetMissingPatches.
 *	@param[out] patches:<array<object>> An array of missing patches that input by user.
 *	@param[out] patches.title:<string> The title of a patch.
 *	@param[out] patches.product:<string> The product of this patch.
 *	@param[out] patches.vendor:<string> The vendor of the product a missing patch. Only available if user input it in json_in.
 *	@param[out] patches.state:<string> The state of a patch after this method completed. It can be: 'not_found' - if patch was not found in result of GetMissingPatches, 'download_failed' - if patch failed in download phase, 'cache_failed' - if patch was downloaded but can not move it to MetaDefender Endpoint Security SDK cache location, 'downloaded' - patch was downloaded and cached successful.
 *	@param[out] patches_source:<string> (Windows Update Agent only) The source supplying patches: 'Windows Update', 'Microsoft Update', 'WSUS or Configuration Manager', 'Unknown', or the file path to the wsusscn2.cab in case WUA works in offline mode
 *	@returns The results of this function are determined by the error code returned by the call. If there is no patch was installed, this method will return WAAPI_OK_FALSE, if all patches was download successful, it will return WAAPI_OK, and it will return WAAPI_PARTIAL_SUCCESS if this have both failed and success patch. For detail state of each patch, check patches.state in results.
 */
#define WAAPI_MID_DOWNLOAD_MISSING_PATCHES 1016

/**
 *	@brief Will cancel an async request. This method is designed specifically for Windows Update Agent.
 *	@ingroup waapi_methods
 *
 *	@param[in] async_job_id:<string> Job id to cancel.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_CANCEL_ASYNC_REQUEST 1024

/**
 *	@brief Will detect what patches are currently installed.
 *	@ingroup waapi_methods
 *
 *	@param[in] query_history:<boolean> If true, will trigger a search in the update history to obtain a broader list of updates. Default is 'false'.
 *	@param[in] retry_internet_services:<boolean> (Windows Update Agent only) If true, will retry with the internet services when failed with managed servers (if they are configured, such as WSUS, Configuration Server). Default value is true.
 *	@param[in] token:<string> The API token required by the product to retrieve the necessary data.
 *	@param[out] patches:<array<object>> An array of installed patches detected for the product.
 *	@param[out] patches.title:<string> The title of the installed patch.
 *	@param[out] patches.description:<string> The description of the installed patch.
 *	@param[out] patches.product:<string> The product for the patch.
 *	@param[out] patches.vendor:<string> The vendor of the product for the patch.
 *	@param[out] patches.severity:<string> The severity of the installed patch: 'low', 'moderate', 'important', 'critical','unknown'.
 *	@param[out] patches.category:<string> The category of the installed patch: 'security_update', 'update_rollup', 'critical_update', 'update', 'driver', 'service_pack', 'unknown'.
 *	@param[out] patches.security_update_id:<string> The security update id for the installed patch. This is equivalent to Security Bulletin ids for Windows, Security Update ids for Apple, and various Security Alert ids for Linux.
 *	@param[out] patches.kb_id:<string> The knowledge base article id for the installed patch. May duplicate security_update_id on some platforms.
 *	@param[out] patches_source:<string> (Windows Update Agent only) The source supplying patches: 'Windows Update', 'Microsoft Update', 'WSUS or Configuration Manager', 'Unknown', or the file path to the wsusscn2.cab in case WUA works in offline mode
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_INSTALLED_PATCHES 1023

/**
 *	@brief Will retrieve all available virtual machines for the product.
 *	@ingroup waapi_methods
 *
 *	@param[out] virtual_machines:<array<object>> An array of avaible virtual machines for the product.
 *	@param[out] virtual_machines.vm_id:<string> The identification string that is required to pass to other Virtual Machine invoke calls.
 *	@param[out] virtual_machines.vm_name:<string> The name of the virtual machine.
 *	@param[out] virtual_machines.vm_path:<string> The path to the virtual machine.
 *	@param[out] hypervisor_type:<number> The type of the hypervisor. 1 = Type 1 (native, bare metal), 2 = Type 2 (hosted)
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_AVAILABLE_VMS 1017

/**
 *	@brief Will retrieve all snapshots for a virtual machine.
 *	@ingroup waapi_methods
 *
 *	@param[in] vm_id:<string> An identification string that was recieved from the GetAvailableVMs call.
 *	@param[out] snapshots:<array<object>> An array of avaible snapshots for the virtual machine.
 *	@param[out] snapshots.snapshot_name:<string> The name of the snapshot.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_LIST_SNAPSHOTS 1018

/**
 *	@brief Will perform the requested operation on a virtual machine.
 *	@ingroup waapi_methods
 *
 *	@param[in] vm_id:<string> An identification string that was recieved from the GetAvailableVMs call.
 *	@param[in] action:<string> The action to be performed. Possible values: 'run', 'shut_down', 'suspend'.
 *	@param[in] attempt_synchronize:<boolean> Tells the API to attempt to synchronize the call, i.e. wait for the operation to complete. This is not possible for all products.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_MANAGE_VM 1019

/**
 *	@brief Will retrieve the current state of the virtual machine.
 *	@ingroup waapi_methods
 *
 *	@param[in] vm_id:<string> An identification string that was recieved from the GetAvailableVMs call.
 *	@param[out] state:<string> The state of a virtual machine. Possible values: 'running', 'suspended', 'shut_down'.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_VM_STATE 1020

/**
 *	@brief Will retrieve a list of plugins for the product.
 *	@ingroup waapi_methods
 *
 *	@param[in] default_language:<string> The language used for the name and description of the plugin, currently supported: "en". If this field is not set or the plugin does not support this language, the language of the active profile will be used.
 *	@param[out] plugins:<array<object>> An array of plugin objects detected for the product.
 *	@param[out] plugins.id:<string> A unique identifier for the plugin.
 *	@param[out] plugins.name:<string> The name of the plugin.
 *	@param[out] plugins.version:<string> The version for the plugin.
 *	@param[out] plugins.type:<string> The type of plugin. This will generally be 'extension' or 'toolbar', but other types may be added.
 *	@param[out] plugins.details:<object> An object with additional details related to the plugin. This information will vary on a per product basis.
 *	@returns 
 */
#define WAAPI_MID_COMMON_GET_PLUGINS 2000

/**
 *	@brief Uninstall the product.
 *	@ingroup waapi_methods
 *
 *	@param[in] type:<string> 'native' for uninstalls using the native uninstaller or 'auto' for managed uninstalls.
 *	@param[in] timeout:<number> (optional) A timeout value in seconds that can be set to this method call. Default value is 1800 (30 minutes).
 *	@param[in] plugin:<object> A json object string, which is an entry in the 'plugins' array returned from the GetPlugins method call on the same product. This will instead uninstall the specified plugin for the product, rather than the product itself. NOTE: this parameter is ignored when type does not equal 'auto'.
 *	@returns 
 */
#define WAAPI_MID_COMMON_UNINSTALL 40000

/**
 *	@brief Terminates all processes associated with a product. This includes the main process, child processes and all component processes.
 *	@ingroup waapi_methods
 *
 *	@param[in] additional_process_names:<array<string>> An array of process names to terminate. These are in addition to the normal set of processes that will terminated.
 *	@param[in] whitelisted_process_names:<array<string>> An array of process names to prevent from termination. This provides a means to filter out specific processes for individual products.
 *	@returns 
 */
#define WAAPI_MID_COMMON_TERMINATE_PRODUCT 40001

/**
 *	@brief Will uninstall/remove the product from the system. If the product does not have a compatible uninstaller, then it is dynamically removed. Otherwise, a compatible uninstaller is executed to remove the product (without requiring user interaction). In case a process is supplied for removal - eliminate method will attempt to remove the program associated with the process, or if that is not possible - it will remove the process only.
 *	@ingroup waapi_methods
 *
 *	@param[in] process_id:<number> A process id used to identify the product for elimination.<br><b>Only one, 'process_id', 'process_name' OR 'product_name' should be provided in </b><code>json_in</code>
 *	@param[in] process_name:<string> A process name used to identify the product for elimination.<br><b>Only one, 'process_id', 'process_name' OR 'product_name' should be provided in </b><code>json_in</code>
 *	@param[in] product_name:<string> The exact name of the product which needs to be eliminated.<br><b>Only one, 'process_id', 'process_name' OR 'product_name' should be provided in </b><code>json_in</code>
 *	@param[in] backup_path:<string> A path to an existing <b>directory</b> where the backups will be saved. Default path is %TEMP%
 *	@param[out] backup_path:<string> The full path to the backup file.
 *	@param[out] product_info:<object> An object containing information about the product which was eliminated. In case the eliminated item is not associated with any identified product, this object is omitted.
 *	@param[out] product_info.vendor_name:<string> The vendor name.
 *	@param[out] product_info.product_name:<string> The product name.
 *	@param[out] product_info.signature:<string> The unique identifier for a product signature.
 *	@param[out] product_info.sig_name:<string> The name collected for this signature of the product.
 *	@param[out] directories:<array<string>> Array of directories which were deleted.
 *	@param[out] paths:<array<string>> Array of file paths which were deleted.
 *	@param[out] libraries:<array<string>> The array of libraries that were unregisted from the system and deleted.
 *	@param[out] registry:<array<string>> The array of registry paths which were deleted.
 *	@returns 
 */
#define WAAPI_MID_ELIMINATE 40002

/**
 *	@brief Restores product which was eliminated without using an uninstaller.
 *	@ingroup waapi_methods
 *
 *	@param[in] backup_path:<string> A existing backup file path ('backup_path') returned by eliminate method.
 *	@returns 
 */
#define WAAPI_MID_RESTORE 40003

/**
 *	@brief Will retrieve computer model and manufacturer.
 *	@ingroup waapi_methods
 *
 *	@param[out] model:<string> The computer model.
 *	@param[out] manufacturer:<string> The computer manufacturer.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_PC_MODEL 30001

/**
 *	@brief Will retrieve CPU and memory parameters.
 *	@ingroup waapi_methods
 *
 *	@param[out] cpu:<object> Collection of CPU attributes
 *	@param[out] cpu.model:<string> The CPU model.
 *	@param[out] cpu.max_speed_mhz:<number> The CPU maximum speed, mhz.
 *	@param[out] memory:<object> Collection of memory (RAM) attributes
 *	@param[out] memory.total_memory_mb:<number> The memory size, mb.
 *	@param[out] memory.memory_speed_mhz:<number> The memory maximum speed, mhz.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_PC_CPU_RAM 30002

/**
 *	@brief Will retrieve list of installed hardware.
 *	@ingroup waapi_methods
 *
 *	@param[out] video_cards:<array<string>> Model names of installed video adapters.
 *	@param[out] network_adapters:<array<object>> An array of information on installed network adapters.
 *	@param[out] network_adapters.description:<string> Model name of installed network adapter.
 *	@param[out] network_adapters.adapter_enabled:<boolean> Indicates whether the adapter is enabled or not.
 *	@param[out] network_adapters.media_state:<string> State of the network adapter connection to the network: 'disconnected', 'connecting', 'connected', 'disconnecting', hardware_not_present', 'hardware_disabled', 'hardware_malfunction', 'media_disconnected', 'authenticating', authentication_succeeded', 'authentication_failed', 'invalid_address', 'credentials_required'
 *	@param[out] network_adapters.physical_address:<string> Media Access Control (MAC) address of the network adapter.
 *	@param[out] network_adapters.ipv4_addresses:<array<string>> Array of IPv4 addresses associated with the current network adapter.
 *	@param[out] network_adapters.ipv6_addresses:<array<string>> Array of IPv6 addresses associated with the current network adapter.
 *	@param[out] network_adapters.dhcp_enabled:<boolean> DHCP enabled state of installed network adapter.
 *	@param[out] network_adapters.subnet_masks:<array<string>> Array of all of the subnet masks associated with the current network adapter.
 *	@param[out] network_adapters.dhcp_lease_obtained:<string> The timestamp when the lease was obtained for the IP address assigned to the computer by the DHCP server.
 *	@param[out] network_adapters.dhcp_lease_expires:<string> The expiration timestamp for a leased IP address that was assigned to the computer by the DHCP server.
 *	@param[out] network_adapters.dhcp_server_address:<string> IP address of the dynamic host configuration protocol (DHCP) server.
 *	@param[out] network_adapters.default_gateways:<array<string>> Array of IP addresses of default gateways that the computer system uses.
 *	@param[out] network_adapters.dns_server_addresses:<array<string>> Array of server IP addresses to be used in querying for DNS servers.
 *	@param[out] volumes.paths:<array<string>> The paths at which the given volume is mounted. Paths can refer to both drive letters, and nested mount points.
 *	@param[out] volumes.type:<string> Type of the device where the volume originates from. Can be either 'Generic Storage', 'Hard Disk', 'Remote', 'CD-ROM', 'Floppy', 'RAM disk', or 'other'.
 *	@param[out] volumes.accessible:<boolean> Indicates whether the volume can be accessed (true) or not (false). Useful for determining whether a disk is inside the CD-ROM drive, or if a floppy disk has been inserted.
 *	@param[out] volumes.interface:<string> The bus interface for the device that owns this volume. Can be either 'SCSI', 'ATAPI', 'ATA', 'IEEE 1394', 'SSA', 'Fibre', 'USB', 'RAID', 'iSCSI', 'SAS', 'SATA', 'SD', 'MMC', 'Virtual', 'File-Backed Virtual' or 'other'.
 *	@param[out] volumes.removable:<boolean> Indicates whether the volume is removable (true) or not (false).
 *	@param[out] volumes.location:<string> Indicates the device location.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_PC_COMPONENTS 30003

/**
 *	@brief Will retrieve total and free disk space.
 *	@ingroup waapi_methods
 *
 *	@param[out] disk_space:<object> Contains space information about the current disk.
 *	@param[out] disk_space.total_size_mb:<number> Total amount of disk space on all mounted partitions, mb.
 *	@param[out] disk_space.free_space_size_mb:<number> Total amount of free disk space on all mounted partitions, mb.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_PC_DISK_SPACE 30004

/**
 *	@brief Will return if the device is password protected.
 *	@ingroup waapi_methods
 *
 *	@param[out] protected:<boolean> The password protection state of this device.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_DEVICE_PASSWORD_PROTECTION_STATE 30005

/**
 *	@brief Will determine whether the current device is a virtual machine
 *	@ingroup waapi_methods
 *
 *	@param[out] is_virtual:<boolean> True if currently running machine is virtual
 *	@param[out] details:<object> Object containing detailed virtual machine information.
 *	@param[out] details.manufacturer:<string> Virtual machine host software manufacturer.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_IS_CURRENT_DEVICE_VIRTUAL 30006

/**
 *	@brief Will return information about the power options of the device
 *	@ingroup waapi_methods
 *
 *	@param[out] on_battery:<boolean> Indicates the device is using battery.<br>(Linux) Support Xfce4 with Light Locker disabled only
 *	@param[out] screen_off_timeout:<number> Timeout to turn off screen in seconds.<br>(Linux) Support Xfce4 with Light Locker disabled only
 *	@param[out] sleep_timeout:<number> Timeout to sleep device in seconds.<br>(Linux) Support Xfce4 with Light Locker disabled only
 *	@param[out] screen_saver:<object> Detail information of screen_saver.<br>(Linux) Support Xfce4 with Light Locker disabled only
 *	@param[out] screen_saver.timeout:<number> Timeout to enter screen saver mode in seconds.<br>(Linux) Support Xfce4 with Light Locker disabled only
 *	@param[out] screen_saver.is_secure:<boolean> Require login after entering screen saver mode.<br>(Windows) Supported.<br>(macOS) Support only for macOS Big Sur and later.<br>(Linux) Support Xfce4 with Light Locker disabled only
 *	@param[out] required_password_timeout:<number> (macOS, Linux only) Timeout to require login after sleep or screen saver begins (0: never, -1: immediate, >0: number of seconds). (macOS) Support only for macOS Big Sur and later. Only show when getting info successfully.<br>(Linux) Support Xfce4 with Light Locker disabled only
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_POWER_OPTIONS 30007

/**
 *	@brief Will set information about power options of the device
 *	@ingroup waapi_methods
 *
 *	@param[in] screen_off_timeout:<number> Timeout to turn off screen in seconds.<br>(Windows) Supported.<br>(macOS) Admin required and value will be rounded up to minute unit (meaning input: 70s (1.16 min) -> 120s (2 min)).<br>(Linux) Support Xfce4 with Light Locker disabled only
 *	@param[in] sleep_timeout:<number> Timeout to sleep device in seconds.<br>(Windows) Supported.<br>(macOS) Admin required and value will be rounded up to minute unit (meaning input: 70s (1.16 min) -> 120s (2 min)).<br>(Linux) Support Xfce4 with Light Locker disabled only
 *	@param[in] screen_saver:<object> (Windows, Linux only) Detail information of screen_saver.<br>(Linux) Support Xfce4 with Light Locker disabled only
 *	@param[in] screen_saver.timeout:<number> Timeout to enter screen saver mode in seconds.<br>(Linux) Support Xfce4 with Light Locker disabled only
 *	@param[in] screen_saver.is_secure:<boolean> Require login after entering screen saver mode.<br>(Linux) Support Xfce4 with Light Locker disabled only
 *	@param[out] screen_off_timeout:<object> Detail information of setting screen_off_timeout.
 *	@param[out] sleep_timeout:<object> Detail information of setting sleep_timeout.
 *	@param[out] screen_saver:<object> Detail information of setting screen_saver.
 *	@param[out] screen_off_timeout.code:<number> Error code after setting screen_off_timeout.
 *	@param[out] sleep_timeout.code:<number> Error code after setting sleep_timeout.
 *	@param[out] screen_saver.code:<number> Error code after setting screen_saver.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_SET_POWER_OPTIONS 30008

/**
 *	@brief Will retrieve the password policy of local machine.
 *	@ingroup waapi_methods
 *
 *	@param[out] password_hist_len:<string> The length of password history maintained
 *	@param[out] max_passwd_age:<string> The maximum allowable password age
 *	@param[out] min_passwd_age:<string> The minimum number of seconds that can elapse between the time a password changes and when it can be changed again
 *	@param[out] min_passwd_len:<string> The minimum allowable password length
 *	@param[out] complexity_requirements:<boolean> Password must meet complexity requirements security policy setting
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_PASSWORD_POLICY 30009

/**
 *	@brief Will retrieve the logical volume information
 *	@ingroup waapi_methods
 *
 *	@param[out] specifier:<string> Specifier used to identify the logical volume where Operating System is held
 *	@param[out] label:<string> Label used to represent the logical volume
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_SYSTEM_VOLUME 30010

/**
 *	@brief (Windows and macOS only) Will retrieve the geographical location for the device. Because this method is using CoreLocation API, user will need to grant access to location services for your application.
 *	@ingroup waapi_methods
 *
 *	@param[in] timeout:<number> Timeout to get location (ms). By default, timeout will be set at 5000 milliseconds.
 *	@param[out] country:<object> Information about the country where the device is located
 *	@param[out] coordinates:<object> Coordinates related information.
 *	@param[out] coordinates.latitude:<string> Latitude expressed in decimal degrees.
 *	@param[out] coordinates.longitude:<string> Longitude expressed in decimal degrees.
 *	@param[out] country.friendly_name:<string> The friendly name of the country
 *	@param[out] country.iso2_code:<string> The country code (ISO2) of the country
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_GEOLOCATION 30011

/**
 *	@brief (Windows only) Will enable or disable the location service on the device.
 *	@ingroup waapi_methods
 *
 *	@param[in] operation:<string> The operation to be done. Should be 'enable' or 'disable'.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_SET_LOCATION_SERVICE_STATE 30012

/**
 *	@brief Download data files according to input. It tries to download all specified files even if one fails.<br>Note that it always returns success code and reports status code for each downloaded file in 'details' field.<br>Temporary files start with 'tmp_' may be created during delta updating and be deleted after that.
 *	@ingroup waapi_methods
 *
 *	@param[in] token:<string> Token string to download files.
 *	@param[in] dat_download_info:<array<object>> Array that lists all data files to download and where to save them. Each file is downloaded in a separate thread and the stack trace contains separate error for each file in case any error happened.
 *	@param[in] dat_download_info.dat_name:<string> <p>Name of requested database file to download. Value can be one of the following (<b>bold font</b>), grouped by type:</p><ul><li>Vulnerability Assessment: <b>vmod.dat</b> (vulnerability information, anti-malware definition, remediation database).</li><li>Anti-malware Definition Checking: <b>vmod-om.dat</b> (anti-malware definition database),</li><li>File-based Vulnerability Assessment: <b>vhsh.dat</b> (file database).</li><li>Patch Management: <b>patch.dat</b> (patch management database), <b>ap_support_chart.json</b> (support chart in JSON format), <b>ap_support_chart.xml</b> (support chart in XML format).</li></ul>
 *	@param[in] dat_download_info.dat_output_source_file:<string> Path to save downloaded file. Please use either one forward slash (Unix path) or 4 backward slashes (Windows path) to separate path components.
 *	@param[in] dat_download_info.delta_update:<number> </span>Delta update modes:</p><ul><li>0 means downloading full file.</li><li>1 means using delta mechanism if possible; otherwise, downloading full file (default value).</li><li>2 means forcefully using delta&nbsp;mechanism and return error if it is not possible.</li></ul></td>
 *	@param[out] details:<array<object>> Array contains result for each file specified in input. Each input file has one output object in this array. The order of files in input is retained.
 *	@param[out] details.dat_name:<string> Name of the file.
 *	@param[out] details.dat_timestamp:<string> Timestamp in seconds of when the data file was published on server. This field only exist if the file can be retrieved from server.
 *	@param[out] details.path:<string> The path the file was saved to (from dat_output_source_file field in input).
 *	@param[out] details.code:<number> Result code when downloading the file.
 *	@param[out] details.errors:<number> Recursively shows the error stack.
 *	@param[out] details.description:<number> The print friendly description of the error code.
 *	@param[out] details.define:<number> The print friendly error define, e.g. WAAPI_ERROR_GENERAL.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WA_VMOD_DOWNLOAD_DATABASE 50200

/**
 *	@brief Download the latest installer of the specified product.
 *	@ingroup waapi_methods
 *
 *	@param[in] signature:<number> The signature id of the product returned from the detection call.
 *	@param[in] path:<string> Path to the directory that will save the installer (overwrite). This field is only needed when "download" field is set to 1.
 *	@param[in] token:<string> The OPSWAT-provided token to access to some resources. This field is only needed for installers that must be downloaded from OPSWAT servers.
 *	@param[in] download:<number> Whether to download the installer or just return download URL. Value 0 will not download the installer, value 1 will download the installer. Default value is 0.
 *	@param[in] os_id:<number> MetaDefender Endpoint Security SDK identifier of the OS that uses the downloaded installer
 *	@param[in] language:<string> Language identifier of the product to download (e.g: "en-us", "fr"). If the vendor does not allow selecting language then this field is ignored. If the vendor allows setting language but the specified language is not supported then the default language of the product is used.
 *	@param[in] architecture:<string> Architecture of product to download ("32-bit", "64-bit" and "arm64" (Mac only)). If the installer does not allow selecting architecture then this field is ignored. If the installer allows setting architecture and this field is not specified then default value is architecture of the installed product, with fallback to OS architecture on Windows. On Mac, only OS architecture is used.
 *	@param[in] os_architecture:<string> Architecture of OS ("32-bit" or "64-bit"). This field is used to download latest installer for some exceptional products. Default value is OS architecture of current running machine.
 *	@param[in] index:<number>  Index of patch file to return in output if the product requires many patch files. User can call this function many times, increase this field from 0 until WA_VMOD_ERROR_OUT_OF_RANGE error code is returned to iterate through all patches. Default value is 0.
 *	@param[in] online:<number> Whether to use online database or not. Value 0 will disable online mode, value 1 will enable it. Default value is 0.
 *	@param[in] patch_id:<number> Patch identifier to get download information from local database (for Analog use case). By default, the function determines the correct patch identifier itself.
 *	@param[out] signature:<number> The signature identifier from the product. If it is different from input signature then it is redirected.
 *	@param[out] type_id:<number> The identifier of output type (schema). Type 1 means single patch file, type 2 means multiple patch files, type 3 means multiple patch files as a zip package. User should only process known output types.
 *	@param[out] patch_id:<number> Internal identifier of the patch data used.
 *	@param[out] analog_id:<string> The identifier to be sent to server in Analog use case.
 *	@param[out] index:<number> Index of the returned patch file within list of patches for the product. This has the same value as input's "index".
 *	@param[out] eula:<string> Link to the End User License Agreement page of the product.
 *	@param[out] release_note:<string> Link to the release note of the product.
 *	@param[out] release_date:<string> Release date of a product version.
 *	@param[out] security_update_id:<string> The security update id of a missing patch. This is equivalent to Knowledge Base ids for Windows.
 *	@param[out] title:<string> The title of the missing patch.
 *	@param[out] product_name:<string>  The possible product name for a missing patch.
 *	@param[out] severity:<string> The severity of a missing patch: 'low', 'moderate', 'important', 'critical', 'unknown'.
 *	@param[out] category:<string> The category of a missing patch: 'security_update', 'update_rollup', 'critical_update', 'update', 'driver', 'service_pack', 'unknown'.
 *	@param[out] url:<string> Link to download the installer.
 *	@param[out] minimum_version:<string> Minimum version that is expected from the download link.
 *	@param[out] language:<string> The language code used for the installer. Empty value means not specified.
 *	@param[out] architecture:<string> The architecture used for the installer. Empty value means not specified.
 *	@param[out] os_id:<number> The Os Info used for the installer.
 *	@param[out] path:<string> Path to the downloaded installer. The installer name is specified by vendor's provided link with each space get replaced by underscore. This field only exists if user chooses to download installer.
 *	@param[out] sha1:<string> SHA1 hash of the downloaded installer. This field only exists if user chooses to download installer.
 *	@param[out] sha256:<string> SHA256 hash of the downloaded installer. This field only exists if user chooses to download installer.
 *	@param[out] md5:<string> MD5 hash of the downloaded installer. This field only exists if user chooses to download installer.
 *	@param[out] size:<string> Size of the downloaded installer in bytes. This field only exists if user chooses to download installer.
 *	@param[out] file_type:<string> File type of the installer.
 *	@param[out] expected_sha1:<array<string>> List of expected SHA1 checksums of the installer. This field only exists if checksum database is loaded and the product is supported.
 *	@param[out] expected_sha256:<array<string>> List of expected SHA256 checksums of the installer. This field only exists if checksum database is loaded and the product is supported.
 *	@param[out] expected_sha512:<array<string>> List of expected SHA512 checksums of the installer. This field only exists if checksum database is loaded and the product is supported.
 *	@param[out] expected_md5:<array<string>> List of expected MD5 checksums of the installer. This field only exists if checksum database is loaded and the product is supported.
 *	@param[out] certificates:<array<object>> List of certificates in the certificate chain embedded into the installer. The code signing certificate is the first item in the array, the next certificate in the chain is the second and so on. This field only exists if user choose to download installer and it is signed by vendor.
 *	@param[out] certificates.issuer:<string> The name of certificate's issuer.
 *	@param[out] certificates.subject:<string> The name of certificate's subject.
 *	@param[out] certificates.serial_number:<string> The certificate serial number.
 *	@param[out] certificates.signature_algorithm:<string> The signature algorithm used in the certificate.
 *	@param[out] source_timestamp:<number> The timestamp of cloud data being used for method with online mode.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WA_VMOD_PATCH_GET_LATEST_INSTALLER 50300

/**
 *	@brief Install product from provided installer. This function must be called with Administrator privilege. It is recommended to only install one product at a time to reduce chance of failure.
 *	@ingroup waapi_methods
 *
 *	@param[in] signature:<number> The signature id of the product returned from the detection call.
 *	@param[in] path:<string> Path to the installer.
 *	@param[in] force_close:<number> Whether to close running product or not before installing. Value 0 will not close blocking processes, 1 will try to close blocking processes. Default value is 0.
 *	@param[in] language:<string> Language identifier of the product to download (e.g: "en-us", "fr"). If the installer does not allow selecting language then this field is ignored. If the installer allows setting language but the specified language is not supported then the default language of the product is used.
 *	@param[in] architecture:<string> Architecture of product to install ("32-bit", "64-bit" and "arm64" (Mac only)). If the installer does not allow selecting architecture then this field is ignored. If the installer allows setting architecture and this field is not specified then default value is architecture of the installed product, with fallback to OS architecture on Windows. On Mac, only OS architecture is used.
 *	@param[in] log_dir:<string> Directory to contain log files if the installer supports it. An installer may write multiple log files to this directory. Default value is environment's temporary directory.
 *	@param[in] online:<number> Whether to use online database or not. Value 0 will disable online mode, value 1 will enable it. Default value is 0.
 *	@param[in] patch_id:<number> Patch identifier to get download information from local database (for Analog use case). By default, the function determines the correct patch identifier itself.
 *	@param[in] timeout:<number> Set timeout when executing a product (in the second). By default, timeout will be set at 30 minutes (1800 seconds) with recommended value from 1 minutes to 60 minutes (60 seconds to 3600 seconds). This field only accepts number values which is inputted in a correct number format and within ranges from 1 to 2147483647 (value 0 will result in WAAPI_ERROR_INVALID_INPUT_ARGS). Input value that does not satisfy requirements will result in undefined behaviour. Return WAAPI_ERROR_THREAD_TIMEOUT (code -49) when installation failed to respond in a timely manner, this error does not indicate product installation failed.
 *	@param[out] install_return_code:<number> The code returned from the installer after being invoked.
 *	@param[out] patch_id:<number> Internal identifier of the patch data used.
 *	@param[out] signature:<number> The signature identifier from the input.
 *	@param[out] version:<string> Detected version of the newly installed product; may not correct if installation requires restarting.
 *	@param[out] language:<string> The language code used for the installer. Empty value means not specified.
 *	@param[out] architecture:<string> The architecture used for the installer. Empty value means not specified.
 *	@param[out] require_restart:<number> Value 1 means installation requires restarting, value 0 means installation does not require restarting.
 *	@param[out] require_close_first:<number> Value 1 means installation requires running products to be closed, value 0 means it is not required.
 *	@param[out] require_uninstall_first:<number> Value 1 means installation requires existing product to be uninstalled first, value 0 means it is not required.
 *	@param[out] blocking_processes:<array<string>> Name or path of the processes that blocked the installation and were terminated.
 *	@param[out] log_paths:<array<string>> Paths to the log files related to the install process.
 *	@param[out] new_signature:<number> The new signature id after updating product to latest version.
 *	@param[out] source_timestamp:<number> The timestamp of cloud data being used for method with online mode.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WA_VMOD_PATCH_INSTALL_FROM_FILES 50301

/**
 *	@brief Load patch database.
 *	@ingroup waapi_methods
 *
 *	@param[in] dat_input_source_file:<string> Input patch database to be consumed.
 *	@param[in] dat_input_checksum_file:<string> Input checksum database to be consumed.
 *	@param[in] online:<number> Whether to use online database or not. Value 0 will disable online mode, value 1 will enable it. Default value is 0. Only patch database available for now
 *	@param[out] version:<string> Version of the offline database (Only show when using offline mode).
 *	@param[out] schema_version:<string> Schema version of the offline database (Only show when using offline mode).
 *	@param[out] published_epoch:<string> The timestamp the database was published.
 *	@param[out] details:<object> The detail of loaded database. This field only exists if patch database is loaded.
 *	@param[out] details.support_signatures:<array<number>> The array of signature numbers that are supported in the database.
 *	@param[out] details.support_install_signatures:<array<number>> The array of supported signature numbers which only support installation in the database.
 *	@param[out] details.self_update_signatures:<array<number>> The array of supported signature numbers which cannot return download URL. Products in this signature array need to use both the download function and the install function of VMOD in order to be updated
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WA_VMOD_PATCH_LOAD_DATABASE 50302

/**
 *	@brief Will query if product updates exist along with information on the current patch level of the product.
 *	@ingroup waapi_methods
 *
 *	@param[in] tolerance:<number> A tolerance factor that can be used to loosen the 'is_current' metric. The default tolerance value is '1'.
 *	@param[in] online:<number> Whether to use online database or not. Value 0 will disable online mode, value 1 will enable it. Default value is 0.
 *	@param[out] is_current:<boolean> True if this product's patch level is current, defaults to true.
 *	@param[out] details:<object> Object containing detailed patch information.
 *	@param[out] details.feed_id:<number> The remote feed ID used to determine patch level.
 *	@param[out] details.count_behind:<number> The number of patches behind of the installed product.
 *	@param[out] details.version:<string> The current version of the product in the remote feed.
 *	@param[out] source_timestamp:<number> The timestamp of cloud data being used for method with online mode.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_PRODUCT_PATCH_LEVEL 50500

/**
 *	@brief Will query source feeds for information on whether Antimalware definitions are up to date. Generally for metrics, 1+ indicates up to date, -1 indicates old
 *	@ingroup waapi_methods
 *
 *	@param[in] tolerance:<number> A tolerance factor that can be used to loosen the 'is_current' metric. The default tolerance value is '1'.
 *	@param[out] is_current:<boolean> True if this product's antimalware defintions are current.
 *	@param[out] details.feed_id:<number> The remote feed ID used to determine definition currency.
 *	@param[out] details.count_behind:<number> The number of definitions behind of the installed antimalware based on definition version. Possible values are: 0+: '0' Indicates the latest version, '1' indicates 1 version behind, etc. -1: Indicates that the definition version is old and the count behind cannot be determined. -2: Indicates invalid or absent information given in the input. -3: Indicates internal error. -4: Indicates absent information in database.
 *	@param[out] details.def_date:<string> The current definition date in the remote feed.
 *	@param[out] details.def_version:<string> The current definition version in the remote feed.
 *	@param[out] details.engine_version:<string> The current engine version in the remote feed.
 *	@param[out] details.def_signature:<string> The current definition signature in the remote feed.
 *	@param[out] details.metrics.basic:<number> A simple metric for determining if definition is up to date based on definition date (within 36 hours) and definition version. Possible values are: 1: Indicates definition is up to date, which means that the definition version is up to date or the definition date is up to date within 12-hour window. 0: Indicates that metric does not apply or insufficient information to determine metric. -1: Indicates that the definition is old. -2: Indicates invalid or absent information given in the input. -3: Indicates internal error.
 *	@param[out] details.metrics.strict:<number> A strict metric for determining if definition is up to date based on definition date and definition version the same way as 'basic' metric but no window for definition date is used. Possible values are: 1: Indicates definition is up to date. 0: Indicates that metric does not apply or insufficient information to determine metric. -1: Indicates that the definition is old. -2: Indicates invalid or absent information given in the input. -3: Indicates internal error.
 *	@param[out] details.metrics.engine_latest:<number> Indicates whether the engine is the latest version. Possible values are: 1+: Indicates that the engine version is up to date. 0: Not supported / Engine version missing from feed. -1: Indicate that the engine version is old. -2: Indicates invalid or absent information given in the input. -3: Indicates internal error.
 *	@param[out] details.metrics.date_latest:<number> Indicates whether definition date is the latest. Possible values are: 1+: Indicates that the definition date is up to date. 0: Indicates that metric does not apply or insufficient information to determine metric. -1: Indicate that the definition date is old. -2: Indicates invalid or absent information given in the input. -3: Indicates internal error.
 *	@param[out] details.metrics.version_latest:<number> Indicates whether the definition version is the latest. Possible values are: 1+: Indicates that the definition version is up to date. 0: Indicates that metric does not apply or insufficient information to determine metric. -1: Indicates that the definition version is old. -2: Indicates invalid or absent information given in the input. -3: Indicates internal error.
 *	@param[out] details.metrics.version_age:<number> Indicates if the definition version is recent in relation with definition date. This metric is useful for dealing with products which update with a high degree of frequency. Possible values are: 3: Indicates that the definition version is current to latest definition date. 2: Indicates that the definition version is current to the latest definition date within 12-hour window. 1: Indicates that the definition version is current to the latest definition date within 36-hour window. 0: Indicates that metric does not apply or insufficient information to determine metric. -1: Indicates that the definition version is older than 36 hours compared to the latest definition date. -2: Indicates invalid or absent information given in the input. -3: Indicates internal error.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DEFINITIONS_SOURCE_CHECK 50501

/**
 *	@brief Will query if product may be defunct (that is is no longer being actively supported with bug fixes and vulnerability fixes).
 *	@ingroup waapi_methods
 *
 *	@param[in] online:<number> Whether to use online database or not. Value 0 will disable online mode, value 1 will enable it. Default value is 0.
 *	@param[out] is_defunct:<boolean> True if this product is known to be no longer actively supported with patches, fixes and updates.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_IS_DEFUNCT 50502

/**
 *	@brief Will query for remediation information for the product.
 *	@ingroup waapi_methods
 *
 *	@param[in] online:<number> Whether to use online database or not. Value 0 will disable online mode, value 1 will enable it. Default value is 0.
 *	@param[out] remediation_link:<string> A link where product updates or patches can be obtained.
 *	@param[out] source_timestamp:<number> The timestamp of cloud data being used for method with online mode.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_REMEDIATIONS 50503

/**
 *	@brief Will query if product vulnerabilities exist along with severity and related information.
 *	@ingroup waapi_methods
 *
 *	@param[in] sources:<array<string>> An array of sources of vulnerability to query from. Allowed values are 'CVE', 'MSB' and 'KB'. Default value is 'CVE'.
 *	@param[in] online:<number> Whether to use online database or not. Value 0 will disable online mode, value 1 will enable it with lightweight database and value 2 will get full online database. Default value is 0.
 *	@param[in] version_range:<string> A version range string is used to query all the CVEs affecting a product within the specified range. Default value is empty string.<br>The valid format of a version range is as follows: <b>(a, b), (a, b], [a, b), [a, b]</b> with 'a' as start of range and 'b' as end of range, separated by a comma ','. Parentheses '()' mean start/end exclusive and square brackets '[]' mean inclusive. For example: range '[ 5.0, 12.0 )' will return CVEs that affect versions between 5 and 12, but not versions >= 12. <br>Version '-1' can be specified as a special value for either start or end (or both) which means unlimited version. For example: [-1, 5.0] returns CVEs affecting all versions that are smaller than or equal to 5.0.
 *	@param[out] has_vulnerability:<boolean> Indicates whether any CVEs have been associated with the particular product
 *	@param[out] has_kb:<boolean> Indicates whether any MSBs or KBs have been associated with the particular product
 *	@param[out] severity:<string> String description of Severity level: 'low', 'moderate', 'important', 'critical', 'unknown'.
 *	@param[out] cves:<array<object>> A list of CVEs associated with the hash.
 *	@param[out] cves.static_id:<number> An OPSWAT identifier for the vulnerability.
 *	@param[out] cves.cve:<string> A CVE identifier string.
 *	@param[out] cves.severity:<string> String description of Severity level: 'low', 'moderate', 'important', 'critical', 'unknown'.
 *	@param[out] cves.severity_index:<number> An OPSWAT-assigned 100 point scale numerical description of Severity level with 100 being greatest and 0 being unknown.
 *	@param[out] cves.description:<string> A text description of the specific vulnerability.
 *	@param[out] cves.details:<object> A set of optional vulnerability details.
 *	@param[out] cves.details.cwe:<string> A CWE group identification string.
 *	@param[out] cves.details.published_epoch:<number> An epoch timestamp indicating source publishing time.
 *	@param[out] cves.details.last_modified_epoch:<number> An epoch timestamp indicating source last update time.
 *	@param[out] cves.details.cisa:<object> A set of information about the CVE, published by CISA.
 *	@param[out] cves.details.cisa.published_epoch:<number> An epoch timestamp indicating CISA source publishing time.
 *	@param[out] cves.details.cisa.due_epoch:<number> An epoch timestamp indicating CISA source due date time.
 *	@param[out] cves.details.references:<array<object>> An array of external reference links and their releated information.
 *	@param[out] cves.details.references.url:<string> A reference URL.
 *	@param[out] cves.details.security_protection:<string> A security protection descriptor.
 *	@param[out] cves.details.cvss_2_0:<object> A set of CVSS 2.0 severity information.
 *	@param[out] cves.details.cvss_2_0.score:<string> A CVSS 2.0 10-point severity score.
 *	@param[out] cves.details.cvss_2_0.access_vector:<string> A CVSS 2.0 access-vector descriptor.
 *	@param[out] cves.details.cvss_2_0.access_complexity:<string> A CVSS 2.0 access-complexity descriptor.
 *	@param[out] cves.details.cvss_2_0.authentication:<string> A CVSS 2.0 authentication descriptor.
 *	@param[out] cves.details.cvss_2_0.confidentiality_impact:<string> A CVSS 2.0 confidentiality impact descriptor.
 *	@param[out] cves.details.cvss_2_0.integrity_impact:<string> A CVSS 2.0 integrity impact descriptor.
 *	@param[out] cves.details.cvss_2_0.availability_impact:<string> A CVSS 2.0 availability impact descriptor.
 *	@param[out] cves.details.cvss_2_0.source:<string> A CVSS 2.0 source descriptor.
 *	@param[out] cves.details.cvss_2_0.generated_on_epoch:<number> The timestamp the CVSS 2.0 was generated.
 *	@param[out] cves.details.cvss_3_0:<object> A set of CVSS 3.0 severity information.
 *	@param[out] cves.details.cvss_3_0.impact_score:<string> A CVSS 3.0 impact score.
 *	@param[out] cves.details.cvss_3_0.vector_string:<string> A CVSS 3.0 vector string.
 *	@param[out] cves.details.cvss_3_0.attack_vector:<string> A CVSS 3.0 attack vector.
 *	@param[out] cves.details.cvss_3_0.attack_complexity:<string> A CVSS 3.0 attack complexity descriptor.
 *	@param[out] cves.details.cvss_3_0.privileges_required:<string> A CVSS 3.0 privileges descriptor.
 *	@param[out] cves.details.cvss_3_0.scope:<string> A CVSS 3.0 scope.
 *	@param[out] cves.details.cvss_3_0.confidentiality_impact:<string> A CVSS 3.0 confidentiality impact.
 *	@param[out] cves.details.cvss_3_0.integrity_impact:<string> A CVSS 3.0 integrity impact.
 *	@param[out] cves.details.cvss_3_0.availability_impact:<string> A CVSS 3.0 availability impact.
 *	@param[out] cves.details.cvss_3_0.base_score:<string> A CVSS 3.0 base score.
 *	@param[out] cves.details.cvss_3_0.base_severity:<string> A CVSS 3.0 base severity descriptor.
 *	@param[out] cves.details.cvss_3_0.exploitability_score:<string> A CVSS 3.0 exploitability score.
 *	@param[out] cves.details.resolution:<array<object>> List of recommendations to patch the vulnerability.
 *	@param[out] cves.details.resolution.product_id:<number> The identifier of the queried product or a product related to this vulnerability.
 *	@param[out] cves.details.resolution.product_name:<string> The name of a product related to this vulnerability.
 *	@param[out] cves.details.resolution.text:<string> Recommendation for the vulnerability in plain text.
 *	@param[out] cves.details.resolution.advisory_url:<string> URL to the advisory webpage of the vulnerability.
 *	@param[out] cves.details.resolution.higher_than_version:<string> Define a version that the product should update to a newer one to patch the vulnerability.
 *	@param[out] cves.details.resolution.higher_than_or_equal_to_version:<string> Define a version that the product should update to or a newer one to patch the vulnerability.
 *	@param[out] cves.details.resolution.running_on_os:<string> The operating system the product runs on.
 *	@param[out] cves.details.resolution.affected_packages:<array<object>> List of installed packages belong to this affected source.
 *	@param[out] cves.details.resolution.affected_packages.name:<string> Name of the affected package.
 *	@param[out] cves.details.resolution.affected_packages.version:<string> Version of the affected package.
 *	@param[out] cves.details.resolution.affected_packages.maintainer:<string> Name of maintainer of the package.
 *	@param[out] cves.details.resolution.affected_packages.type:<number> Type of package (0 - OS, 1 - Application).
 *	@param[out] msbs:<array<object>> A list of vulnerabilities in Microsoft Security Bulletin (MSB) format. This field only exist if MSB source is specified in the input.
 *	@param[out] msbs.static_id:<number> An OPSWAT identifier for the vulnerability.
 *	@param[out] msbs.severity:<string> String description of Severity level: 'low', 'moderate', 'important', 'critical', 'unknown'.
 *	@param[out] msbs.severity_index:<number> A 5 point scale numerical description of Severity level with 5 being greatest and 0 being unknown.
 *	@param[out] msbs.description:<string> A text description of the specific vulnerability.
 *	@param[out] msbs.msb_id:<string> Identifier of the MSB.
 *	@param[out] msbs.kb_id:<number> Knowledgebase identifier of the MSB.
 *	@param[out] msbs.details:<object> A set of additional vulnerability details.
 *	@param[out] msbs.details.published_epoch:<number> An epoch timestamp indicating source publishing time.
 *	@param[out] msbs.details.cves:<array<string>> A list of Common Vulnerabilities and Exposures (CVE) identifiers associated with the MSB.
 *	@param[out] msbs.details.patch_resolution.kb_id:<number> Knowledgebase identifier of the security patch for this vulnerability.
 *	@param[out] msbs.details.patch_resolution.url:<string> The URL to the detail information of the security patch.
 *	@param[out] msbs.details.supersedes:<array<object>> A list of MSBs that were replaced by this MSB.
 *	@param[out] msbs.details.supersedes.kb_id:<number> Knowledgebase identifier of a MSB that was replaced by this MSB.
 *	@param[out] msbs.details.supersedes.msb_id:<string> Identifier of a MSB that was replaced by this MSB.
 *	@param[out] kbs:<array<object>> A list of vulnerabilities in Microsoft Knowledge Base format. This field only exist if 'KB' source is specified in the input.
 *	@param[out] kbs.static_id:<number> An OPSWAT identifier for the vulnerability.
 *	@param[out] kbs.severity:<string> String description of Severity level: 'low', 'moderate', 'important', 'critical', 'unknown'.
 *	@param[out] kbs.severity_index:<number> A 5 point scale numerical description of Severity level with 5 being greatest and 0 being unknown.
 *	@param[out] kbs.description:<string> A text description of the specific vulnerability.
 *	@param[out] kbs.kb_id:<number> Knowledgebase identifier of the vulnerability.
 *	@param[out] kbs.details:<object> A set of additional vulnerability details.
 *	@param[out] kbs.details.type:<string> Type of KB
 *	@param[out] kbs.details.search_url:<string> Search URL of the vulnerability.
 *	@param[out] kbs.details.detail_url:<string> URL to vulnerability's detail information.
 *	@param[out] kbs.details.affected_products:<array<object>> Array of information of products affected by the vulnerability.
 *	@param[out] kbs.details.affected_products.severity_index:<number> A 5 point scale numerical description of Severity level with 5 being greatest and 0 being unknown.
 *	@param[out] kbs.details.affected_products.severity:<string> String description of Severity level: 'low', 'moderate', 'important', 'critical', 'unknown'.
 *	@param[out] kbs.details.affected_products.advisory_url:<string> URL to the advisory webpage of the vulnerability.
 *	@param[out] kbs.details.affected_products.published_epoch:<number> An epoch timestamp indicating source publishing time.
 *	@param[out] kbs.details.affected_products.impact:<string> Description of the impact of the vulnerability on the product.
 *	@param[out] kbs.details.affected_products.product:<string> Name of the product affected by the vulnerability.
 *	@param[out] kbs.details.affected_products.platform:<string> Name of the platform the affected product run on.
 *	@param[out] kbs.details.affected_products.cve:<string> Knowledgebase identifier of the vulnerability.
 *	@param[out] source_timestamp:<number> The timestamp of cloud data being used for method with online mode.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_PRODUCT_VULNERABILITY 50505

/**
 *	@brief Will collect potential vulnerabilities that may affect system based on product version.
 *	@ingroup waapi_methods
 *
 *	@param[out] has_vulnerability:<boolean> If any vulnerability exists for the system then this is set to true.
 *	@param[out] severity:<string> String description of Severity level: 'low', 'moderate', 'important', 'critical' and 'unknown'. It will be the max from CVEs.
 *	@param[out] cves:<array<object>> A list of CVEs associated with the system.
 *	@param[out] cves.static_id:<number> An OPSWAT identifier for the vulnerability.
 *	@param[out] cves.severity:<string> String description of Severity level: 'low', 'moderate', 'important', 'critical', 'unknown'.
 *	@param[out] cves.severity_index:<number> An OPSWAT-assigned 100 point scale numerical description of Severity level with 100 being greatest and 0 being unknown.
 *	@param[out] cves.description:<string> A text description of the specific vulnerability.
 *	@param[out] cves.cve:<string> A CVE identifier string.
 *	@param[out] cves.affected_products:<array<object>> An array of products that may have the vulnerability and may exist on system.
 *	@param[out] cves.affected_products.signature:<number> Signature identification.
 *	@param[out] cves.affected_products.product:<object> Description of a product.
 *	@param[out] cves.affected_products.product.id:<number> Product identification.
 *	@param[out] cves.affected_products.product.name:<string> Product name.
 *	@param[out] cves.affected_products.vendor:<object> Description of the vendor of the product.
 *	@param[out] cves.affected_products.vendor.id:<number> Vendor identification.
 *	@param[out] cves.affected_products.vendor.name:<string> Vendor name.
 *	@param[out] cves.details:<object> A set of optional vulnerability details.
 *	@param[out] cves.details.cwe:<string> A CWE group identification string.
 *	@param[out] cves.details.published_epoch:<number> An epoch timestamp indicating source publishing time.
 *	@param[out] cves.details.last_modified_epoch:<number> An epoch timestamp indicating source last update time.
 *	@param[out] cves.details.references:<array<object>> An array of external reference links and their releated information.
 *	@param[out] cves.details.references.url:<string> A reference URL.
 *	@param[out] cves.details.security_protection:<string> A security protection descriptor.
 *	@param[out] cves.details.cvss_2_0:<object> A set of CVSS 2.0 severity information.
 *	@param[out] cves.details.cvss_2_0.score:<string> A CVSS 2.0 10-point severity score.
 *	@param[out] cves.details.cvss_2_0.access_vector:<string> A CVSS 2.0 access-vector descriptor.
 *	@param[out] cves.details.cvss_2_0.access_complexity:<string> A CVSS 2.0 access-complexity descriptor.
 *	@param[out] cves.details.cvss_2_0.authentication:<string> A CVSS 2.0 authentication descriptor.
 *	@param[out] cves.details.cvss_2_0.confidentiality_impact:<string> A CVSS 2.0 confidentiality impact descriptor.
 *	@param[out] cves.details.cvss_2_0.integrity_impact:<string> A CVSS 2.0 integrity impact descriptor.
 *	@param[out] cves.details.cvss_2_0.availability_impact:<string> A CVSS 2.0 availability impact descriptor.
 *	@param[out] cves.details.cvss_2_0.source:<string> A CVSS 2.0 source descriptor.
 *	@param[out] cves.details.cvss_2_0.generated_on_epoch:<number> The timestamp the CVSS 2.0 was generated.
 *	@param[out] cves.details.cvss_3_0:<object> A set of CVSS 3.0 severity information.
 *	@param[out] cves.details.cvss_3_0.impact_score:<string> A CVSS 3.0 impact score.
 *	@param[out] cves.details.cvss_3_0.vector_string:<string> A CVSS 3.0 vector string.
 *	@param[out] cves.details.cvss_3_0.attack_vector:<string> A CVSS 3.0 attack vector.
 *	@param[out] cves.details.cvss_3_0.attack_complexity:<string> A CVSS 3.0 attack complexity descriptor.
 *	@param[out] cves.details.cvss_3_0.privileges_required:<string> A CVSS 3.0 privileges descriptor.
 *	@param[out] cves.details.cvss_3_0.scope:<string> A CVSS 3.0 scope.
 *	@param[out] cves.details.cvss_3_0.confidentiality_impact:<string> A CVSS 3.0 confidentiality impact.
 *	@param[out] cves.details.cvss_3_0.integrity_impact:<string> A CVSS 3.0 integrity impact.
 *	@param[out] cves.details.cvss_3_0.availability_impact:<string> A CVSS 3.0 availability impact.
 *	@param[out] cves.details.cvss_3_0.base_score:<string> A CVSS 3.0 base score.
 *	@param[out] cves.details.cvss_3_0.base_severity:<string> A CVSS 3.0 base severity descriptor.
 *	@param[out] cves.details.cvss_3_0.exploitability_score:<string> A CVSS 3.0 exploitability score.
 *	@param[out] cves.details.resolution:<array<object>> List of recommendations to patch the vulnerability.
 *	@param[out] cves.details.resolution.product_id:<number> The identifier of the queried product or a product related to this vulnerability.
 *	@param[out] cves.details.resolution.product_name:<string> The name of a product related to this vulnerability.
 *	@param[out] cves.details.resolution.text:<string> Recommendation for the vulnerability in plain text.
 *	@param[out] cves.details.resolution.advisory_url:<string> URL to the advisory webpage of the vulnerability.
 *	@param[out] cves.details.resolution.higher_than_version:<string> Define a version that the product should update to a newer one to patch the vulnerability.
 *	@param[out] cves.details.resolution.higher_than_or_equal_to_version:<string> Define a version that the product should update to or a newer one to patch the vulnerability.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_SYSTEM_VULNERABILITIES 50509

/**
 *	@brief Consumes an offline vmod database.
 *	@ingroup waapi_methods
 *
 *	@param[in] dat_input_source_file:<string> Input database if to be cosumed from a file location.
 *	@param[out] version:<string> Version of the database.
 *	@param[out] schema_version:<string> Schema version of the database.
 *	@param[out] published_epoch:<string> The timestamp the database was published.
 *	@param[out] details:<object> Details of the database.
 *	@param[out] details.number_of_cves:<number> Number of CVE feeds in the database.
 *	@param[out] details.number_of_msbs:<number> Number of MSB feeds in the database.
 *	@param[out] details.number_of_kbs:<number> Number of KB feeds in the database.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_CONSUME_OFFLINE_VMOD_DATABASE 50520

/**
 *	@brief Examines the operating system patch level and queries if it is up to date. Recommended asynchronous implementation.
 *	@ingroup waapi_methods
 *
 *	@param[in] tolerance:<number> A tolerance factor that can be used to loosen the 'is_current' metric. The default tolerance value is '1'.
 *	@param[in] force_timeout:<number> A timeout value in seconds that can be set per method call, recommended that the value be at least 120 seconds. The default value is set off the server timeout configuration value.
 *	@param[out] is_current:<boolean> True if the system is up to date.
 *	@param[out] count_behind:<number> The number of patches the operating system is behind. Value 0 means that the system is up-to-date.
 *	@param[out] is_missing_service_pack:<boolean> Whether there is a service pack amongs missing patches or not.
 *	@param[out] details:<object> Detail information about the missing patches
 *	@param[out] details.ie_count_behind:<number> Number of missing patches for Internet Explorer. Only on Windows.
 *	@param[out] details.dot_net_count_behind:<number> Number of missing patches for .NET Framework. Only on Windows.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_SYSTEM_PATCH_LEVEL 50550

/**
 *	@brief Connect to the driver interface for subsequent operations. Each process' connection to the driver is tracked, and must be disonnected to indicate the driver is no longer being used. Requires administrative privileges.
 *	@ingroup waapi_methods
 *
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DRIVER_CONNECT 29010

/**
 *	@brief Disconnect from the driver interface. Disconnect is required to successfully uninstall the driver. Disconnecting will not unblock any previously-blocked connected devices, and will not disable auto-blocking.
 *	@ingroup waapi_methods
 *
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DRIVER_DISCONNECT 29011

/**
 *	@brief Return the driver connection status.
 *	@ingroup waapi_methods
 *
 *	@param[out] connected:<boolean> True if connected to driver interface, false if not.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DRIVER_STATUS 29012

/**
 *	@brief Uninstall the driver from the system. All processes must be disconnected from the driver before uninstall will succeed. Upon successful completion, all drives will be unblocked. Requires administrative privileges.
 *	@ingroup waapi_methods
 *
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DRIVER_UNINSTALL 29013

/**
 *	@brief Toggle driver auto-block feature. If auto-block is enabled, newly plugged in devices will be blocked automatically. If auto-block is disabled, it will not unblock drives it had previously blocked. Requires administrative privileges.
 *	@ingroup waapi_methods
 *
 *	@param[in] enable:<boolean> True if auto-block should be enabled, false if it should be disabled.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DRIVER_AUTOBLOCK 29014

/**
 *	@brief Block or unblock a drive mounted at given path, or block/unblock all connected drives if path is not supplied. Note that all processes that blocked the drive must unblock it before it becomes accessible again. System drive cannot be blocked. Requires administrative privileges.
 *	@ingroup waapi_methods
 *
 *	@param[in] enable:<boolean> True if drive should be blocked, false if it should be unblocked.
 *	@param[in] path:<string> Path where the drive is mounted, or leave out this key if blocking all currently connected drives.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DRIVER_BLOCK 29015

/**
 *	@brief Check if the supplied drive/directory is actively utilizing encryption. This method does not require administrative privileges or being connected, as long as the driver has been successfully installed.
 *	@ingroup waapi_methods
 *
 *	@param[in] path:<string> Path of the drive/directory which is to be checked for encryption.
 *	@param[out] encrypted:<boolean> True if the supplied drive/directory is encrypted, false if it is not encrypted.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DRIVER_CHECK_ENCRYPTION 29016

/**
 *	@brief Copy file from supplied path to destination. This method works even when copying from/to a blocked drive. Requires administrative privileges.
 *	@ingroup waapi_methods
 *
 *	@param[in] path:<string> Path of the file which is going to be copied.
 *	@param[in] destination:<string> Destination where the file will be copied to. Destination directories must exist, and destination file must not exist.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DRIVER_COPY_FILE 29017

/**
 *	@brief Delete file from given path. This is a privileged, low level operation that can delete files located on a blocked drive, or files which could not be deleted by ordinary means. Requires administrative privileges.
 *	@ingroup waapi_methods
 *
 *	@param[in] path:<string> Path of the file which is going to be deleted.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DRIVER_DELETE_FILE 29018

/**
 *	@brief List directory contents at given path, in terms of files and folders contained within (non-recursive). Directory can be located on a blocked drive. Requires administrative privileges.
 *	@ingroup waapi_methods
 *
 *	@param[in] path:<string> Path of the directory which will be queried for content.
 *	@param[out] base_path:<string> Full path to base target.
 *	@param[out] files:<array<object>> List of files present at the supplied base path.
 *	@param[out] files.name:<string> Name of the file.
 *	@param[out] files.size:<string> Size of the file, in bytes.
 *	@param[out] files.last_modified_time:<number> Last modification timestamp of the file.
 *	@param[out] folders:<array<object>> List of directories present at the supplied base path.
 *	@param[out] folders.name:<string> Name of the folder.
 *	@param[out] folders.last_modified_time:<number> Last modification timestamp of the folder.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DRIVER_LIST_DIRECTORY 29019

/**
 *	@brief Read file through the driver, whilst inheriting driver privileges (e.g. access to blocked drives); this method relies on the event handler API to receive notifications when each file chunk is read. If launched normally (rather than asynchronously), this method will block until the file is read in full. In order to use this method, you must first configure a memory buffer as part of registering <a href='c_sdk.html#wa_api_register_handler'>an event handler for event type '5'</a>. Requires administrative privileges.
 *	@ingroup waapi_methods
 *
 *	@param[in] path:<string> Path of the file to be read.
 *	@param[in] handler_id:<number> The handler ID returned by wa_api_register_handler function - which indirectly indicates which buffer will be used for reading.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DRIVER_READ_FILE 29020

/**
 *	@brief Create the desired directory using the driver, whilst inheriting driver privileges (e.g. access to blocked drives). If recursive key is true, then non-existent intermediate directories will be created. If recursive key is false (or omitted), then the presence of non-existent intermediate directories will result in WAAPI_ERROR_NOT_FOUND. Requires administrative privileges and active connection to driver (only if operating on blocked drive).
 *	@ingroup waapi_methods
 *
 *	@param[in] path:<string> Full path to the desired folder. With recursive flag, non-existent intermediate folders will be created.
 *	@param[in] recursive:<boolean> Indicate whether intermidiate folders should be automatically created (true), or not (false). Default value is false.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DRIVER_MAKE_DIRECTORY 29021

/**
 *	@brief Rename the desired file or directory using the driver, whilst inheriting driver privileges (e.g. access to blocked drives). Requires administrative privileges and active connection to driver (only if operating on blocked drive).
 *	@ingroup waapi_methods
 *
 *	@param[in] path:<string> Path of the file or directory to be rename.
 *	@param[in] name:<string> The new name for the file or directory
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DRIVER_RENAME_PATH 29022

/**
 *	@brief Check a drive mounted at given path is blocked or unblocked. Requires administrative privileges.
 *	@ingroup waapi_methods
 *
 *	@param[in] path:<string> Path that can be used to access a volume. Supported two types of volume mount points: 1 - A drive letter (for example, "C:\\"), 2 - A volume GUID path (for example, "\\\\?\\Volume{26a21bda-a627-11d7-9931-806e6f6e6963}\\", the "\\" at the end is optional).
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DRIVER_IS_LOCKED 29023

/**
 *	@brief Will start/stop/restart/show running status of the kernel device driver (WaDriver). Requires administrative privileges.
 *	@ingroup waapi_methods
 *
 *	@param[in] operation:<string> Verb that decsribes which operation to perform. Possible values are: 'start', 'stop', 'restart', 'show_state', 'uninstall'
 *	@param[out] running:<boolean> True if driver is running - will only be returned if 'operation' is "show_state"
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_MANAGE_DRIVER 29001

/**
 *	@brief Will determine if directory (name of which is passed as input parameter) is encrypted. ManageDriver method with verb 'start' must be called prior to calling this method. Requires administrative privileges.
 *	@ingroup waapi_methods
 *
 *	@param[in] path:<string> Path name of directory to be checked for encryption.
 *	@param[out] encryption_active:<boolean> True if directory is encrypted.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_QUERY_DRIVER_FOR_ENCRYPTION_STATE 29002

/**
 *	@brief Will copy a file. The file can be locked (by Windows) or user might not have access to it.
 *	@ingroup waapi_methods
 *
 *	@param[in] path_existing:<string> Path name of file to be copied.
 *	@param[in] path_new:<string> Path name of destination file. It must not exist.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DRIVER_FORCE_COPY_FILE 29003

/**
 *	@brief Will delete a file. The file can be locked (by Windows) or user might not have access to it.
 *	@ingroup waapi_methods
 *
 *	@param[in] path:<string> Path name of file to be deleted.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DRIVER_FORCE_DELETE_FILE 29004

/**
 *	@brief Will return list of files and sub-directories in specified directory (non-recursive). The directory can be on a blocked volume. Requires administrative privileges.
 *	@ingroup waapi_methods
 *
 *	@param[in] target_path:<string> Path name of directory to list contents.
 *	@param[out] file_structure:<array<object>> Contents of target directory (list of files and sub-directories).
 *	@param[out] file_structure.name:<string> File or directory name.
 *	@param[out] file_structure.type:<string> Can be: 'file' or 'directory'.
 *	@param[out] file_structure.last_modified_time:<number> Last modification timestamp.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DRIVER_QUERY_FILESYSTEM 29005

/**
 *	@brief Will block/unblock access to specified USB storage volume or to all such volumes. Requires administrative privileges.
 *	@ingroup waapi_methods
 *
 *	@param[in] operation:<string> Verb that decsribes which operation to perform. Possible values are: 'block_access', 'unblock_access'
 *	@param[in] target_volume:<string> Target volume name, e.g. 'F:'. If this parameter is present, the above operation will be applied only to that volume. Otherwise, it will be applied to all USB volumes.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_MANAGE_USB_DEVICE 29006

/**
 *	@brief Configures the diagnostic module. When a setup call is made when the module is at any state where data is loaded, such as after collecting the base snapshot, or waiting for an after diff, it will clear the in-memory data and prepare for a new collection state as if no other collection or cache loads had been made.
 *	@ingroup waapi_methods
 *
 *	@param[in] configuration:<object> Configuration settings.
 *	@param[in] configuration.collect_file:<object> Configuration object for file collection.
 *	@param[in] configuration.collect_file.enable:<boolean> Enables this configuration.
 *	@param[in] configuration.collect_file.paths:<array<string>> Directory paths to include in the collection.
 *	@param[in] configuration.collect_file.include.&lt;name&gt;:<boolean> The file extension is the key name and the value is whether or not it should be excluded.
 *	@param[in] configuration.collect_file.timestamp:<boolean> Include timestamps in the collected data.
 *	@param[in] configuration.collect_file.shortcut:<boolean> Include shortcuts in the collected data.
 *	@param[in] configuration.collect_registry:<object> Configuration object for registry collection.
 *	@param[in] configuration.collect_registry.enable:<boolean> Enables this configuration.
 *	@param[in] configuration.collect_registry.paths:<array<object>> Registry key locations to include in the collection.
 *	@param[in] configuration.collect_registry.paths.hive:<string> Abbreviated identifier for hive being collected i.e. HKLM
 *	@param[in] configuration.collect_registry.paths.key:<string> Path for the key to collect.
 *	@param[in] configuration.collect_process:<object> Configuration object for process collection.
 *	@param[in] configuration.collect_process.enable:<boolean> Enables this configuration.
 *	@param[in] configuration.collect_service:<object> Configuration object for service collection.
 *	@param[in] configuration.collect_service.enable:<boolean> Enables this configuration.
 *	@param[in] configuration.collect_wmi:<object> Configuration object for wmi collection.
 *	@param[in] configuration.collect_wmi.enable:<boolean> Enables this configuration.
 *	@param[in] configuration.cache:<string> Configure the path for cache files, defaults to the data directory path from the waapi setup call.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_SETUP_COLLECTOR 60001

/**
 *	@brief Configures the diagnostic module.
 *	@ingroup waapi_methods
 *
 *	@param[in] cache:<boolean> Specifies whether to cache the collection to disk.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_COLLECT_BASE 60002

/**
 *	@brief This call finds the difference between the current machine state, and the base collection. If this is a new install ('signature') type collection, there needs to be a collection of running applications. The running applications found will be returned in a list, with id's and names so that a client can provide the information back to the user, and use the id to reference the selection later, in the 'GetDifference' call. These ids are temporary references, and DO NOT correspond to v4 signature id's.
 *	@ingroup waapi_methods
 *
 *	@param[in] type:<string> The type of collection: 'signature' (for new product installs), 'added' (to see what was added), 'modified' (to see what was changed)
 *	@param[in] from_cache:<boolean> Specifies whether to use the cache on disk as a base collection.
 *	@param[out] list_applications:<array<object>> An array of active applications, used to select which application to associate with the collection
 *	@param[out] list_applications.title:<string> The title of the application window.
 *	@param[out] list_applications.id:<number> Relative index into list of found applications, which is stored until CollectChanges is run again.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_COLLECT_CHANGES 60003

/**
 *	@brief This call retrieves the stored difference from the CollectChanges call. It will output an encrypted file in a directory according to the location set in the setup call, or will default to the data directory set in the core setup call.
 *	@ingroup waapi_methods
 *
 *	@param[in] application_selection:<number> Associates the application with this collection, only applicable if type is 'signature'
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_DIFFERENCE 60004

/**
 *	@brief Will perform a suite of MetaDefender Endpoint Security SDK Invoke and data collection routines for diagnostic and debugging purposes. NOTE: This call may take minutes to complete depending on the system and configuration. Module specific keys may be outputted in the json_out for the current configuration of each module.
 *	@ingroup waapi_methods
 *
 *	@param[in] run_detection:<boolean> If true, will run product detection and make product specific diagnostic calls for a predefined set of methods, which can be managed through additional input arguments. Default value is true.
 *	@param[in] collect_system_info:<boolean> If true, will collect information about the device and operating system. Default value is true.
 *	@param[in] collect_uninstall:<boolean> If true, will collect the uninstall entries from the system registry. Windows only. Default value is true.
 *	@param[in] collect_security_center:<boolean> If true, will collect information about products reporting to Security Center. Windows only. Default value is true.
 *	@param[in] inclusion_list:<array<number>> An array of method ids that should be called for each detected product. This is in addition to the default list. Will be ignored if 'run_detection' is false.
 *	@param[in] exclusion_list:<array<number>> An array of method ids that should be removed from the set of methods called for each detected product. This will override the default list. Will be ignored if 'run_detection' is false.
 *	@param[in] output_file:<string> The path to an output file to write the results to. Must have appropriate permissions and the file will be overwritten if it exists. If this key is defined then the output json will ONLY contain the default keys.
 *	@param[in] output_file_format:<string> If 'output_file' is true, this will control the output format of the file. Possible values are: 'json'. Default value is 'json'.
 *	@param[out] system_info:<object> The collected info about the device and OS. Will not exist if 'collect_system_info' is false in the input json.
 *	@param[out] system_info.device_identity:<string> The device identifier.
 *	@param[out] system_info.username:<string> The name of the logged-on user with an active session.
 *	@param[out] system_info.domain:<string> The domain which the user account belongs to.
 *	@param[out] system_info.os:<object> The operating system info.
 *	@param[out] system_info.os.name:<string> The operating system name.
 *	@param[out] system_info.os.version:<string> The operating system version.
 *	@param[out] system_info.os.architecture:<string> The operating system architecture: '32-bit', '64-bit'.
 *	@param[out] system_info.os.os_type:<number> The operating system type: 1 - Windows, 2 - Linux, 4 - Mac.
 *	@param[out] system_info.os.computer_type:<string> Local hardware type: 'desktop', 'laptop', 'server', 'appliance', 'unknown'.
 *	@param[out] system_info.os.os_language:<string> The operating system language identifier.
 *	@param[out] system_info.virtualization:<object> Information about the virtualization state of the machine.
 *	@param[out] system_info.virtualization.is_virtual:<boolean> True if currently running machine is virtual.
 *	@param[out] system_info.virtualization.details:<object> Object containing detailed virtual machine information.
 *	@param[out] system_info.virtualization.details.manufacturer:<string> Virtual machine host software manufacturer.
 *	@param[out] uninstall_info:<array<object>> The collected info about the device and OS. Will not exist if 'collect_uninstall' is false in the input json. Windows only.
 *	@param[out] uninstall_info.key_name:<string> The uninstall hive key name.
 *	@param[out] uninstall_info.display_name:<string> The uninstall 'DisplayName' field. May be empty.
 *	@param[out] uninstall_info.display_version:<string> The uninstall 'DisplayVersion' field. May be empty.
 *	@param[out] uninstall_info.install_location:<string> The uninstall 'InstallLocation' field. May be empty.
 *	@param[out] uninstall_info.publisher:<string> The uninstall 'Publisher' field. May be empty.
 *	@param[out] security_center:<array<object>> The collected info about the device and OS. Will not exist if 'collect_security_center' is false in the input json. Windows only.
 *	@param[out] security_center.namespace:<string> The security center namespace. Possible values: 'SecurityCenter', 'SecurityCenter2'
 *	@param[out] security_center.interface:<string> The security center interface name. Possible values: 'AntiVirusProduct', 'AntiSpywareProduct', 'FirewallProduct'
 *	@param[out] security_center.name:<string> The security center 'displayName' property.
 *	@param[out] security_center.guid:<string> The security center 'instanceGuid' property.
 *	@param[out] detected_products:<array<object>> A list of detected products with method results for all implemented methods that are in the list of included methods. Will not exist if 'run_detection' is false in the input json.
 *	@param[out] detected_products.signature:<number> The unique identifier for a product signature.
 *	@param[out] detected_products.sig_name:<string> The name for this signature of the product.
 *	@param[out] detected_products.methods:<array<object>> An array of objects which are the results from each wa_api_invoke method made for the signature. Additional keys listed here are added to the root of the result object.
 *	@param[out] detected_products.methods.method_name:<string> The method's friendly name.
 *	@param[out] config:<object> Will store the current configuration for each module.
 *	@param[out] config.configs:<array<object>> List of all modules successfully loaded.
 *	@param[out] config.configs.timing:<number> The measured time for the method call in milliseconds.
 *	@param[out] config.configs.version:<string> The current version of the module.
 *	@param[out] config.configs.module:<string> Name of the module.
 *	@param[out] config.configs.code:<number> The result code when the module was loaded.
 *	@param[out] config.errors:<array<object>> List of all modules unsuccessfully loaded.
 *	@param[out] config.errors.timing:<number> The measured time for the method call in milliseconds.
 *	@param[out] config.errors.version:<string> The current version of the module.
 *	@param[out] config.errors.module:<string> Name of the module.
 *	@param[out] config.errors.code:<number> The result code when the module was not loaded.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DIAGNOSE 60005

/**
 *	@brief Will retrieve a list of cookies on all profiles for a given browser.
 *	@ingroup waapi_methods
 *
 *	@param[out] cookies:<array<object>> An array of cookie objects on all profiles for a given browser. May be empty if no cookies exist.
 *	@param[out] cookies.cookie_name:<string> The name of the cookie.
 *	@param[out] cookies.cookie_value:<string> The value of the cookie.
 *	@param[out] cookies.cookie_expire_time:<string> The expiration time of the cookie in unix time (GMT).
 *	@param[out] cookies.cookie_url:<string> The URL of the cookie.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_COOKIE 70001

/**
 *	@brief Will set a list of cookies on all profiles for a given browser.
 *	@ingroup waapi_methods
 *
 *	@param[in] cookies:<array<object>> An array of cookies objects to set for all profiles on an given browser.
 *	@param[in] cookies.cookie_name:<string> The name of the cookie.
 *	@param[in] cookies.cookie_value:<string> The value of the cookie.
 *	@param[in] cookies.cookie_expire_time:<string> The expiration time of the cookie in unix time (GMT).
 *	@param[in] cookies.cookie_url:<string> The URL of the cookie.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_SET_COOKIE 70002

/**
 *	@brief Will delete cookies on all profiles for a given browser.
 *	@ingroup waapi_methods
 *
 *	@param[in] filter:<object> A filter object for deleting cookies.
 *	@param[in] filter.start_time:<string> The filter starting time in unix time (GMT). Cookies after this time, but before 'end_time' will be deleted.
 *	@param[in] filter.end_time:<string> The filter ending time in unix time (GMT). Cookies before this time, but after 'start_time' will be deleted.
 *	@param[in] filter.cookie_name_contain:<string> Cookie names containing this string will be deleted.
 *	@param[in] filter.cookie_url_contain:<string> Cookie URLs containing this string will be deleted.
 *	@param[in] delete_all:<boolean> If true, will delete all the cookies for all profiles. This has highest priority if set.
 *	@param[in] secure_delete:<boolean> If true, will securely delete the cookies for all profiles. This key can be used in combination with other input parameters.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DELETE_COOKIE 70003

/**
 *	@brief Will delete cache files on all profiles for a given browser.
 *	@ingroup waapi_methods
 *
 *	@param[in] filter:<object> A filter object for deleting cache files.
 *	@param[in] filter.start_time:<string> The filter starting time in unix time (GMT). Cache files after this time, but before 'end_time' will be deleted.
 *	@param[in] filter.end_time:<string> The filter ending time in unix time (GMT). Cache files before this time, but after 'start_time' will be deleted.
 *	@param[in] delete_all:<boolean> If true, will delete all the cache files for all profiles. This has highest priority if set.
 *	@param[in] secure_delete:<boolean> If true, will securely delete the cookies for all profiles. This key can be used in combination with other input parameters.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DELETE_CACHE 70004

/**
 *	@brief Will delete browsing history on all profiles for a given browser.
 *	@ingroup waapi_methods
 *
 *	@param[in] filter:<object> A filter object for deleting browser history.
 *	@param[in] filter.start_time:<string> The filter starting time in unix time (GMT). Browser history after this time, but before 'end_time' will be deleted.
 *	@param[in] filter.end_time:<string> The filter ending time in unix time (GMT). Browser history before this time, but after 'start_time' will be deleted.
 *	@param[in] delete_all:<boolean> If true, will delete all the browser history for all profiles. This has highest priority if set.
 *	@param[in] secure_delete:<boolean> If true, will securely delete the browser history for all profiles. This key can be used in combination with other input parameters.
 *	@param[out] synced_profiles:<string> List the profiles with sync mode enabled. Deleting browsing history does not affect synced history data.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DELETE_BROWSING_HISTORY 70005

/**
 *	@brief Will delete download history on all profiles for a given browser.
 *	@ingroup waapi_methods
 *
 *	@param[in] filter:<object> A filter object for deleting download history.
 *	@param[in] filter.start_time:<string> The filter starting time in unix time (GMT). Download history after this time, but before 'end_time' will be deleted.
 *	@param[in] filter.end_time:<string> The filter ending time in unix time (GMT). Download history before this time, but after 'start_time' will be deleted.
 *	@param[in] delete_all:<boolean> If true, will delete all the download history for all profiles. This has highest priority if set.
 *	@param[in] secure_delete:<boolean> If true, will securely delete the download history for all profiles. This key can be used in combination with other input parameters.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DELETE_DOWNLOAD_HISTORY 70006

/**
 *	@brief Will delete form data and password on all profiles for a given browser
 *	@ingroup waapi_methods
 *
 *	@param[in] filter:<object> A filter object for deleting form data and passwords.
 *	@param[in] filter.start_time:<string> The filter starting time in unix time (GMT). Form data and passwords after this time, but before 'end_time' will be deleted.
 *	@param[in] filter.end_time:<string> The filter ending time in unix time (GMT). Form data and passwords before this time, but after 'start_time' will be deleted.
 *	@param[in] delete_all:<boolean> If true, will delete all form data and passwords for all profiles. This has highest priority if set.
 *	@param[in] secure_delete:<boolean> If true, will securely delete the form data and passwords for all profiles. This key can be used in combination with other input parameters.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DELETE_FORM_PASSWORD 70007

/**
 *	@brief Will manage (backup/restore) sync profiles for a given browser.
 *	@ingroup waapi_methods
 *
 *	@param[in] action:<string> The action name used to perform record/restore of the sync profile. Possible values are 'record' or 'restore'. If action is 'record', it will backup user profile (just user profile, not history, cache or cookies), overwriting any existing recorded profile. If action is 'restore' and there is a recorded profile - it will be restored, otherwise if no profile was recorded an error code will be returned.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_MANAGE_SYNC_PROFILE 70008

/**
 *	@brief Will delete last opened session for a given browser.
 *	@ingroup waapi_methods
 *
 *	@param[in] secure_delete:<boolean> If true, will securely delete the files that stores the last opened session for a given browser. Default values is 'true'.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_DELETE_LAST_SESSION 70009

/**
 *	@brief Will scan given running processes and dlls for a given computer
 *	@ingroup waapi_methods
 *
 *	@param[in] target_process_ids:<array<number>> An array of process_id which are running need to be scanned. This input need to be specified if scan_all_running_processes is false.
 *	@param[in] scan_all_running_processes:<boolean> If true, will scan all running processes of all users on given computer.
 *	@param[in] scan_level:<string> Indicates whether function should scan the given process and all the loaded dll and exe by each process by using value 'deep' or the given processes only by using value 'quick'. The default scan_level value is 'quick'
 *	@param[in] force_rescan:<boolean> If true, will do a force rescan even we have cached result.
 *	@param[in] no_file_upload:<boolean> If true, the scanned file will only be scanned using the hash lookup, and will not be uploaded to Metadefender or target Metadefender server for scanning. Default value is 'false'
 *	@param[in] no_sample_sharing:<boolean> If no_file_upload is set to true, then this value is ignored. Otherwise, if this value is set to true - the file will be saved on Metadefender Server, with intention of sharing samples with antimalware vendors for research. Default value is 'false'
 *	@param[in] no_hash_lookup:<boolean> If true, file will not be scanned at all and will not be uploaded to Metadefender or target Metadefender server for scanning. If true, 'no_file_upload' is not used anymore. Default value is 'false'
 *	@param[out] infection_scan_id:<string> A session id key representing the created scanning session
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_TRIGGER_INFECTION_SCAN_RUNNING_PROCESSES 80001

/**
 *	@brief Will scan given product's components and binary files
 *	@ingroup waapi_methods
 *
 *	@param[in] scan_level:<string> Indicates whether function should scan the all the binary files (exe and dll) under the given product's install directory by using value 'deep' or only the product's components by using value 'quick'. The default scan_level value is 'quick'
 *	@param[in] force_rescan:<boolean> If true, will do a force rescan even we have cached result.
 *	@param[in] no_file_upload:<boolean> If true, the scanned file will only be scanned using the hash lookup, and will not be uploaded to Metadefender or target Metadefender server for scanning. Default value is 'false'
 *	@param[in] no_sample_sharing:<boolean> If no_file_upload is set to true, then this value is ignored. Otherwise, if this value is set to true - the file will be saved on Metadefender Server, with intention of sharing samples with antimalware vendors for research. Default value is 'false'
 *	@param[in] no_hash_lookup:<boolean> If true, file will not be scanned at all and will not be uploaded to Metadefender or target Metadefender server for scanning. If true, 'no_file_upload' is not used anymore. Default value is 'false'
 *	@param[out] infection_scan_id:<string> A session id key representing the created scanning session
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_TRIGGER_INFECTION_SCAN_PRODUCT_INSTALLED_BINARIES 80002

/**
 *	@brief Will scan given file and folder path(s) recursively. If scanning directories, it is important to end directory paths with a slash in order to indicate that the path points to a directory, rather than a file.
 *	@ingroup waapi_methods
 *
 *	@param[in] target_path:<array<string>> Array of absolute paths to files and folders which need to be scanned. Directory paths must be terminated with a slash in order to indicate that the path refers to a directory.
 *	@param[in] force_rescan:<boolean> If true, will do a force rescan even we have cached result.
 *	@param[in] no_file_upload:<boolean> If true, the scanned file will only be scanned using the hash lookup, and will not be uploaded to Metadefender or target Metadefender server for scanning. Default value is 'false'
 *	@param[in] no_sample_sharing:<boolean> If no_file_upload is set to true, then this value is ignored. Otherwise, if this value is set to true - the file will be saved on Metadefender Server, with intention of sharing samples with antimalware vendors for research. Default value is 'false'
 *	@param[in] no_hash_lookup:<boolean> If true, file will not be scanned at all and will not be uploaded to Metadefender or target Metadefender server for scanning. If true, 'no_file_upload' is not used anymore. Default value is 'false'
 *	@param[out] infection_scan_id:<string> A session id key representing the created scanning session
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_TRIGGER_INFECTION_SCAN_SPECIFIC_PATH 80003

/**
 *	@brief Will scan given network addresses
 *	@ingroup waapi_methods
 *
 *	@param[in] target_addresses:<array<string>> An array of network addresses need to be scanned. This input need to be specified if scan_all_connected_addresses is false.
 *	@param[in] scan_all_connected_addresses:<boolean> If true, will scan all connected network addresses on given computer; Note that this parameter takes precedence over 'target_addresses'
 *	@param[out] infection_scan_id:<string> A session id key representing the created scanning session
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_TRIGGER_INFECTION_SCAN_NETWORK_ADDRESSES 80004

/**
 *	@brief Will retrieve the result of a given scanning session
 *	@ingroup waapi_methods
 *
 *	@param[in] infection_scan_id:<string> A session id key representing the scanning session
 *	@param[out] scan_complete:<boolean> True if the given scanning session was completed
 *	@param[out] malware_found:<boolean> True if there was any malware found
 *	@param[out] scanning_type:<boolean> Shows the type of the queried scan
 *	@param[out] details:<array<object>> Will contain a key for each type of scanning object, include process_id, file_path or network_address type. The value varies depending on the type of scanning object
 *	@param[out] details.status:<string> Indicates the scanning object is clear, dirty or in-progress
 *	@param[out] details.total_source:<number> Indicates the total number or engines used to scan the object
 *	@param[out] details.hash:<string> Indicates the hash code of the scanning object if the object is a file or process
 *	@param[out] details.scan_time:<string> Indicates the scan time of this particular file.
 *	@param[out] details.mso_data_id:<string> Indicates the data_id on Metadefender of the scanning object if the object is a file or process
 *	@param[out] details.network_address:<string> Network address of the detected threat
 *	@param[out] details.domain_name:<string> Domain name of the connection (only for external IP addresses)
 *	@param[out] details.mac_address:<string> MAC address of the connection (only for internal IP addresses)
 *	@param[out] details.explanation:<array<string>> An array of reasons which explain the scanning status
 *	@param[out] details.threats:<array<object>> An array of threats found with details information
 *	@param[out] details.threats.threat_name:<string> Name of threat found
 *	@param[out] details.threats.av_name:<string> Name of antivirus engine which found the threat
 *	@param[out] details.threats.scan_time:<string> Scan time of specific antivirus engine over the threat
 *	@param[out] details.threats.av_def_time:<string> The definition time of a specific antivirus engine
 *	@param[out] details.threats.assessment:<string> Type of threat detected
 *	@param[out] details.threats.source_name:<string> Source of the feed, usually the domain where the feed is from (e.g., example.com)
 *	@param[out] details.threats.confident:<string> Represents the reliability of the detection based on several factors. The higher the score, the more reliable the result.
 *	@param[out] details.geo_info:<object> An object represents the geolocation of address
 *	@param[out] details.geo_info.country_name:<string> Country name of the network address (e.g., Brazil)
 *	@param[out] details.geo_info.country_code:<string> Country name of the network address (e.g., BR)
 *	@param[out] details.geo_info.region_name:<string> Region name of the network address (e.g., Rio de Janeiro)
 *	@param[out] details.geo_info.region_code:<string> Region code of the network address (e.g., 27)
 *	@param[out] details.geo_info.city:<string> City name of the network address (e.g., Rio de Janeiro)
 *	@param[out] files_in_archive:<array<object>> List all file inside an archive file along with its detail information if the archive file is dirty
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_QUERY_INFECTION_SCAN_STATUS_BY_ID 80005

/**
 *	@brief Will abort a given scanning session
 *	@ingroup waapi_methods
 *
 *	@param[in] infection_scan_id:<string> A session id key representing the scanning session
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_ABORT_INFECTION_SCAN_BY_ID 80006

/**
 *	@brief Will retrieve the Metadefender engine list and its definition time
 *	@ingroup waapi_methods
 *
 *	@param[out] engines:<array<object>> An array of objects, each representing an engine name and its corresponding definition time
 *	@param[out] engines.engine_name:<string> Name of the Metadefender engine
 *	@param[out] engines.definition_time:<string> The time the definitions were last updated
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_RETRIEVE_METASCAN_ENGINE_LIST 80007

/**
 *	@brief Will retrieve the Metadefender source list and its url
 *	@ingroup waapi_methods
 *
 *	@param[out] sources:<array<object>> An object represents each source name and its corresponding url
 *	@param[out] sources.source_name:<string> Name of the Metadefender source
 *	@param[out] sources.source_link:<string> The URL of the Metadefender source
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_RETRIEVE_METASCAN_SOURCE_LIST 80008

/**
 *	@brief Retrieve the device infection state by conditions (including processes, connections, and any repeated threats)
 *	@ingroup waapi_methods
 *
 *	@param[in] process_scan:<boolean> If true, an attempt will be made to scan processes using configuration from process_scan_options. If false, infected process information will not be returned. Default value is 'true'
 *	@param[in] process_scan_options:<object> Will contain a key for each scanning option
 *	@param[in] process_scan_options.scan_level:<string> Indicates whether function should scan the given process and all the loaded dll and exe by each process by using value 'deep' or the given processes only by using value 'quick'. The default scan_level value is 'quick'
 *	@param[in] process_scan_options.force_rescan:<boolean> If true, will do a force rescan even if we have cached result. Default value is 'false'
 *	@param[in] process_scan_options.no_file_upload:<boolean> If true, the scanned file will only be scanned using the hash lookup, and will not be uploaded to Metadefender or target Metadefender server for scanning. Default value is 'false'
 *	@param[in] process_scan_options.no_sample_sharing:<boolean> If no_file_upload is set to true, then this value is ignored. Otherwise, if this value is set to true - the file will be saved on Metadefender Server, with intention of sharing samples with antimalware vendors for research. Default value is 'false'
 *	@param[in] network_connection_scan:<boolean> If true, will do a scan on all connected addresses and return a list of blacklisted_connections that may indicate potential threats. Default value is 'true'
 *	@param[in] repeated_threat_detection:<boolean> If true, will attempt to detect if an antimalware product is installed, and if so - will gather threat data from the located product. If no antimalware product is detected - then no results will be produced for repeathed threat detection. Default value is 'true'
 *	@param[in] repeated_threat_detection_options:<object> Will contain a key for each options used in detecting repeated threats
 *	@param[in] repeated_threat_detection_options.monitor_days:<number> Number of past, consecutive days-worth of threat history to be included. For instance a value of '3' will consider threat detection history from past 3 days. Default value is '7'
 *	@param[in] repeated_threat_detection_options.repeated_tolerance:<number> Minimum number of times the threat has to be detected to be considered a repeated threat. Default value is '2'
 *	@param[out] infection_found:<boolean> If true, infections were found and more information is available in 'details' object
 *	@param[out] details:<object> Contains grouped results for all requested scan types
 *	@param[out] details.infected_processes:<array<object>> Holds the process scan results
 *	@param[out] details.infected_processes.file:<string> Absolute path to process file that was detected as a threat
 *	@param[out] details.infected_processes.file_id:<string> Threat file's ID
 *	@param[out] details.infected_processes.mso_data_id:<string> Threat file's Metadefender ID
 *	@param[out] details.infected_processes.sha1:<string> Threat file's SHA-1 hash value
 *	@param[out] details.infected_processes.md5:<string> Threat file's MD5 hash value
 *	@param[out] details.infected_processes.sha256:<string> Threat file's SHA-256 hash value
 *	@param[out] details.infected_processes.total_source:<number> Number of Matascan Online engines used for scanning
 *	@param[out] details.infected_processes.threats:<array<object>> An array of threats found with detailed information
 *	@param[out] details.infected_processes.threats.threat_name:<string> Name of threat found
 *	@param[out] details.infected_processes.threats.av_name:<string> Name of the antimalware product used to detect the threat
 *	@param[out] details.infected_processes.threats.av_def_time:<string> The definition time of a specific antivirus engine
 *	@param[out] details.infected_processes.threats.scan_time:<string> The time the threat was found in unix time (GMT).
 *	@param[out] details.blacklisted_connections:<array<object>> Holds the network connection scan results
 *	@param[out] details.blacklisted_connections.network_address:<string> Network address of the detected threat
 *	@param[out] details.blacklisted_connections.total_source:<string> Number of Matascan Online engines used for scanning
 *	@param[out] details.blacklisted_connections.threats:<array<object>> An array of threats found with detailed information
 *	@param[out] details.blacklisted_connections.threats.assessment:<string> Assessment of the type of detected threat
 *	@param[out] details.blacklisted_connections.threats.source_name:<string> Name associated with the source of the threat
 *	@param[out] details.blacklisted_connections.threats.confident:<string> Confidence level behind the detected threat
 *	@param[out] details.blacklisted_connections.geo_info:<object> Geographic information related to the threat
 *	@param[out] details.blacklisted_connections.city:<string> Name of city from which the threat originated
 *	@param[out] details.blacklisted_connections.country_name:<string> Name of country from which the threat originated
 *	@param[out] details.blacklisted_connections.country_code:<string> Country code from which the threat originated
 *	@param[out] details.blacklisted_connections.region_name:<string> Name of the geographic region from which the threat originated
 *	@param[out] details.blacklisted_connections.region_code:<string> Geographic region code from which the threat originated
 *	@param[out] details.blacklisted_connections.latitude:<string> Geographic coordinate of the threat origin along the North-South position of a point on the Earth's surface, measured in decimal degrees North or South of the equator
 *	@param[out] details.blacklisted_connections.longitude:<string> Geographic coordinate of the threat origin along the East-West position of a point on the Earth's surface, measured in decimal degrees East or West of the Prime Meridian
 *	@param[out] details.found_repeated_threats:<array<object>> An array of details representing repeated threats which were detected
 *	@param[out] details.found_repeated_threats.file:<string> Absolute file path of the repeated threat
 *	@param[out] details.found_repeated_threats.found_repeated_by_signature:<array<object>> Details of threats that had their signatures repeatedly detected
 *	@param[out] details.found_repeated_threats.found_repeated_by_signature.signature:<string> Signature ID of the detected threat
 *	@param[out] details.found_repeated_threats.found_repeated_by_signature.threat_name:<string> Name of the detected threat
 *	@param[out] details.found_repeated_threats.found_repeated_by_signature.repeat_count:<number> Number of times this threat has been repeatedly detected
 *	@param[out] details.found_repeated_threats.found_repeated_by_signature.repeat_details:<array<object>> Details of the repeated threats
 *	@param[out] details.found_repeated_threats.found_repeated_by_signature.repeat_details.scan_time:<string> The time the threat was found in unix time (GMT).
 *	@param[out] details.found_repeated_threats.found_repeated_by_signature.repeat_details.remediation:<string> The type of remediation (none, cleaned, deleted, quarantined, or partial).
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_INFECTION_STATE 80009

/**
 *	@brief Get the supplementary data for provided file path
 *	@ingroup waapi_methods
 *
 *	@param[in] file_path:<string> Path to the file
 *	@param[out] supplementary_data_details:<object> An object containing a collection of supplementary file details
 *	@param[out] supplementary_data_details.vendor_info:<object> An object containing information about the vendor of the file
 *	@param[out] supplementary_data_details.vendor_info.vendor_name:<string> Name of the vendor
 *	@param[out] supplementary_data_details.vendor_info.oesis_vendor_id:<string> ID of the vendor in MetaDefender Endpoint Security SDK database
 *	@param[out] supplementary_data_details.product_info:<object> An object containing information about the product the requested file is associated with
 *	@param[out] supplementary_data_details.product_info.product_name:<string> Name of the product
 *	@param[out] supplementary_data_details.product_info.oesis_product_id:<string> ID of the product in MetaDefender Endpoint Security SDK database
 *	@param[out] supplementary_data_details.product_info.product_version:<string> Version of the product
 *	@param[out] supplementary_data_details.product_info.oesis_signature_id:<string> Signature ID of the product in MetaDefender Endpoint Security SDK database
 *	@param[out] supplementary_data_details.product_info.categories:<array<object>> Categories that the product in question belongs to
 *	@param[out] supplementary_data_details.product_info.categories.category_name:<string> Name of the category
 *	@param[out] supplementary_data_details.product_info.categories.oesis_category_id:<string> Category ID of the product in MetaDefender Endpoint Security SDK database
 *	@param[out] supplementary_data_details.file_info:<object> An object containing information about the file
 *	@param[out] supplementary_data_details.file_info.sha1:<string> File's SHA-1 hash value
 *	@param[out] supplementary_data_details.file_info.file_name:<string> Name of the file
 *	@param[out] supplementary_data_details.file_info.file_path:<string> Path of the file
 *	@param[out] supplementary_data_details.file_info.file_property_version:<string> Property version of the file
 *	@param[out] supplementary_data_details.file_info.digital_signature:<object> An object containing information about file's digital signature (including certificate data)
 *	@param[out] supplementary_data_details.file_info.digital_signature.certificate_issued_to:<string> The identity of the entity to whom the certificate was issued
 *	@param[out] supplementary_data_details.file_info.digital_signature.certificate_issued_by:<string> The identity of the authority which issued the certificate
 *	@param[out] supplementary_data_details.file_info.digital_signature.certificate_serial_number:<string> Serial number of the certificate
 *	@param[out] supplementary_data_details.file_info.loaded_components:<array<string>> Array of components' names associated with the file
 *	@param[out] supplementary_data_details.file_info.connections:<array<object>> Connections associated with the specified file
 *	@param[out] supplementary_data_details.file_info.connections.external_ip:<string> External IP address of the connection
 *	@param[out] supplementary_data_details.file_info.connections.domain_name:<string> Domain name of the connection
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_GET_INFECTION_SUPPLEMENTARY_DATA 80010

/**
 *	@brief Submit supplementary scan data to Metadefender
 *	@ingroup waapi_methods
 *
 *	@param[in] infection_scan_id:<string> A session id key representing the scanning session
 *	@param[out] data_submission_details:<array<object>> An array containing a collection of details regarding the submission
 *	@param[out] data_submission_details.file_path:<string> Path of the file being submitted
 *	@param[out] supplementary_data_details.sha1:<string> File's SHA-1 hash value
 *	@param[out] supplementary_data_details.submission_succeed:<boolean> If true, the submission was successful. If false, the submission failed.
 *	@param[out] supplementary_data_details.submission_rc:<number> Integer return code of the submission method.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_SUBMIT_INFECTION_SUPPLEMENTARY_DATA 80011

/**
 *	@brief Submit supplementary scan data for running processes to Metadefender without performing the actual scan
 *	@ingroup waapi_methods
 *
 *	@param[in] target_process_ids:<array<number>> An array of process_id which are running need to be scanned. This input need to be specified if scan_all_running_processes is false.
 *	@param[in] scan_all_running_processes:<boolean> If true, will scan all running processes of all users on given computer.
 *	@param[in] scan_level:<string> Indicates whether function should scan the given process and all the loaded dll and exe by each process by using value 'deep' or the given processes only by using value 'quick'. The default scan_level value is 'quick'
 *	@param[in] no_sample_sharing:<boolean> If no_file_upload is set to true, then this value is ignored. Otherwise, if this value is set to true - the file will be saved on Metadefender Server, with intention of sharing samples with antimalware vendors for research. Default value is 'false'
 *	@param[out] data_submission_details:<array<object>> An array containing a collection of details regarding the submission
 *	@param[out] data_submission_details.file_path:<string> Path of the file being submitted
 *	@param[out] supplementary_data_details.sha1:<string> File's SHA-1 hash value
 *	@param[out] supplementary_data_details.submission_succeed:<boolean> If true, the submission was successful. If false, the submission failed.
 *	@param[out] supplementary_data_details.submission_rc:<number> Integer return code of the submission method.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_SUBMIT_RUNNING_PROCESSES_SUPPLEMENTARY_DATA 80012

/**
 *	@brief Submit supplementary scan data for a detected product to Metadefender without performing the actual scan
 *	@ingroup waapi_methods
 *
 *	@param[in] scan_level:<string> Indicates whether function should scan the all the binary files (exe and dll) under the given product's install directory by using value 'deep' or only the product's components by using value 'quick'. The default scan_level value is 'quick'
 *	@param[in] no_sample_sharing:<boolean> If no_file_upload is set to true, then this value is ignored. Otherwise, if this value is set to true - the file will be saved on Metadefender Server, with intention of sharing samples with antimalware vendors for research. Default value is 'false'
 *	@param[out] data_submission_details:<array<object>> An array containing a collection of details regarding the submission
 *	@param[out] data_submission_details.file_path:<string> Path of the file being submitted
 *	@param[out] supplementary_data_details.sha1:<string> File's SHA-1 hash value
 *	@param[out] supplementary_data_details.submission_succeed:<boolean> If true, the submission was successful. If false, the submission failed.
 *	@param[out] supplementary_data_details.submission_rc:<number> Integer return code of the submission method.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_SUBMIT_DETECTED_PRODUCT_SUPPLEMENTARY_DATA 80013

/**
 *	@brief Submit supplementary scan data for a specific path (recursively) to Metadefender without performing the actual scan. If case of directory, it is important to end directory paths with a slash in order to indicate that the path points to a directory, rather than a file.
 *	@ingroup waapi_methods
 *
 *	@param[in] target_path:<array<string>> Array of absolute paths to files and folders which need to be scanned. Directory paths must be terminated with a slash in order to indicate that the path refers to a directory.
 *	@param[in] no_sample_sharing:<boolean> If no_file_upload is set to true, then this value is ignored. Otherwise, if this value is set to true - the file will be saved on Metadefender Server, with intention of sharing samples with antimalware vendors for research. Default value is 'false'
 *	@param[out] data_submission_details:<array<object>> An array containing a collection of details regarding the submission
 *	@param[out] data_submission_details.file_path:<string> Path of the file being submitted
 *	@param[out] supplementary_data_details.sha1:<string> File's SHA-1 hash value
 *	@param[out] supplementary_data_details.submission_succeed:<boolean> If true, the submission was successful. If false, the submission failed.
 *	@param[out] supplementary_data_details.submission_rc:<number> Integer return code of the submission method.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_SUBMIT_SPECIFIC_PATH_SUPPLEMENTARY_DATA 80014

/**
 *	@brief Will retrieve network interface configuration information
 *	@ingroup waapi_methods
 *
 *	@param[in] options:<array<string>> Array of options strings that can be passed to method.
 *	@param[out] interface_list:<array<object>> A list of network interface objects
 *	@param[out] interface_list.interface_id:<string> A system generated interface id
 *	@param[out] interface_list.interface:<string> The interface name
 *	@param[out] interface_list.interface_desc:<string> The interface description
 *	@param[out] interface_list.type:<string> The type of the network interface
 *	@param[out] interface_list.connected:<boolean> Whether the network interface is connected to a network (up:true or down:false)
 *	@param[out] interface_list.down_speed_kbps:<number> downstream speed
 *	@param[out] interface_list.up_speed_kbps:<number> upstream speed
 *	@param[out] interface_list.mtu:<number> mtu: maximum transmission unit size bytes
 *	@param[out] interface_list.primary_dns_suffix:<string> primary dns suffix
 *	@param[out] interface_list.dynamic_dns_enabled:<boolean> True if dynamic DNS is enabled
 *	@param[out] interface_list.dhcp_enabled:<boolean> True if DHCP is enabled
 *	@param[out] interface_list.netbios_over_tcpip_enabled:<boolean> True if Netbios over TCP/IP is enabled
 *	@param[out] interface_list.ipv4_enabled:<boolean> True if ipv4 is enabled
 *	@param[out] interface_list.ipv6_enabled:<boolean> True if ipv6 is enabled
 *	@param[out] interface_list.secondary_ipv6:<array<string>> An ordered array of ipv6 addresses. Present if multiple ipv6 addresses defined.
 *	@param[out] interface_list.ipv6_multicast:<string> An ipv6 multicast address
 *	@param[out] interface_list.secondary_ipv6_multicast:<array<string>> An ordered array of ipv6 addresses. Present if multiple ipv6 multicast addresses defined.
 *	@param[out] interface_list.ipv6_gateway:<string> An ipv6 gateway address
 *	@param[out] interface_list.secondary_ipv6_gateway:<array<string>> An ordered array of ipv6 gateway addresses. Present if multiple ipv6 gateways defined.
 *	@param[out] interface_list.ipv6_dns_server:<string> An ipv6 dns server address
 *	@param[out] interface_list.secondary_ipv6_dns_server:<array<string>> An ordered array of ipv6 dns server addresses. Present if multiple ipv6 dns server adddresses defined.
 *	@param[out] interface_list.dhcpv6_server:<string> A dhcpv6 server address.
 *	@param[out] interface_list.temp_ipv6:<string> A temporary ipv6 address
 *	@param[out] interface_list.link_local_ipv6:<string> A link local Ipv6 address
 *	@param[out] interface_list.dhcpv6_client_duid:<string> dhcpv6 client duid
 *	@param[out] interface_list.dhcpv6_iaid:<number> dhcpv6 iaid
 *	@param[out] interface_list.mask:<string> An ipv4 network mask
 *	@param[out] interface_list.secondary_mask:<array<string>> An ordered array of ipv4 network masks. Present if multiple ips/networks are defined.
 *	@param[out] interface_list.ipv4:<string> An ipv4 address
 *	@param[out] interface_list.secondary_ipv4:<array<string>> An ordered array of ipv4 addresses. Present if multiple ipv4 addresses are defined.
 *	@param[out] interface_list.ipv4_multicast:<string> An ipv4 multicast address
 *	@param[out] interface_list.secondary_ipv4_multicast:<array<string>> An ordered array of ipv4 addresses. Present if multiple ipv4 mutlicast addresses are defined.
 *	@param[out] interface_list.ipv4_gateway:<string> An ipv4 gateway address.
 *	@param[out] interface_list.secondary_ipv4_gateway:<array<string>> An ordered array of ipv4 gateway addresses. Present if multiple gateways are specified.
 *	@param[out] interface_list.ipv4_dns_server:<string> An ipv4 dns server address.
 *	@param[out] interface_list.secondary_ipv4_dns_server:<array<string>> An ordered array of ipv4 dns server addresses. Present if multiple dns servers are specified.
 *	@param[out] interface_list.dhcpv4_server:<string> A dhcpv4 server address.
 *	@param[out] interface_list.cidr:<string> An ipv4 network in cidr notation
 *	@param[out] interface_list.secondary_cidr:<array<string>> An ordered array of ipv4 network in cidr notation. Present if interface is attached to multiple networks.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_NET_CONFIG 97770

/**
 *	@brief Will send out network packets in order to discover information about attached networks
 *	@ingroup waapi_methods
 *
 *	@param[in] ipv4:<string> ipv4 address or range or ipv4 network in cidr notation
 *	@param[in] ipv6:<string> ipv6 address or range or ipv6 network in cidr notation
 *	@param[in] dns:<string> hostname of the target machine
 *	@param[in] options:<array<string>> Array of options strings that can be passed to method.
 *	@param[in] os_detect:<boolean> Boolean indicating whether to perform the OS scan on the target.
 *	@param[in] resolve_dns:<boolean> Boolean indicating whether to resolve dns for each ip/ipv6. NOTE: ENABLING THIS MAY CAUSE THIS MACHINE TO ACTIVELY SEND OUT PACKETS. MAY CAUSE CONSIDERABLE SLOW DOWN ALSO!
 *	@param[out] ip_v4_net_list:<array<object>> A list of ipv4 networks
 *	@param[out] ip_v4_net_list.ip_v4_net:<string> An ipv4 network in cidr notation
 *	@param[out] ip_v4_net_list.size:<string> Size of the network
 *	@param[out] ip_v4_net_list.count:<number> Count of detected ipv4 addresses.
 *	@param[out] ip_v4_net_list.ip_v4_list:<array<object>> A list of ipv4 addresses
 *	@param[out] ip_v4_net_list.ip_v4_list.ip_v4:<string> An ipv4 address
 *	@param[out] ip_v4_net_list.ip_v4_list.mac:<string> A physical layer address
 *	@param[out] ip_v4_net_list.ip_v4_list.dns:<array<string>> List of any detected associated dns address strings
 *	@param[out] ip_v4_net_list.ip_v4_list.hit_code:<number> Number indicating probe result: 1 for successful probe, 2 indicating partial success due to intermittant connectivity or network misconfiguration, 3 if results for OS detection are just a guess
 *	@param[out] ip_v4_net_list.ip_v4_list.device_manufacturer:<string> Name of device manufacturer
 *	@param[out] ip_v4_net_list.ip_v4_list.device_type:<string> Indicates whether a device is general purpose computer or phone.
 *	@param[out] ip_v4_net_list.ip_v4_list.os_desc:<string> A general decription of the device OS
 *	@param[out] ip_v4_net_list.ip_v4_list.os_type:<number> OStype code, (1 - Windows), (2-Linux), (4-MacOSX). Default is 0.
 *	@param[out] ip_v4_net_list.ip_v4_list.os_details:<array<string>> List of specific operating systems the target may be running
 *	@param[out] ip_v4_net_list.ip_v4_list.os_guess:<array<string>> List of guesses for the operating systems taht the target may be running
 *	@param[out] ip_v4_net_list.ip_v4_list.network_hops:<number> Distance to the target machine in netowrk hops
 *	@param[out] ip_v6_net_list:<array<object>> A list of ipv6 networks
 *	@param[out] ip_v6_net_list.ip_v6_net:<string> An ipv6 network in cidr notation
 *	@param[out] ip_v6_net_list.size:<string> Size of the network
 *	@param[out] ip_v6_net_list.count:<number> Count of detected ipv6 addresses.
 *	@param[out] ip_v6_net_list.ip_v6_list:<array<object>> A list of ipv6 addresses
 *	@param[out] ip_v6_net_list.ip_v6_list.ip_v6:<string> An ipv6 address
 *	@param[out] ip_v6_net_list.ip_v6_list.mac:<string> A physical layer address
 *	@param[out] ip_v6_net_list.ip_v6_list.dns:<array<string>> List of any detected associated dns address strings
 *	@param[out] ip_v6_net_list.ip_v6_list.hit_code:<number> Number indicating probe result: 1 for successful probe, 2 indicating partial success due to intermittant connectivity or network misconfiguration, 3 if results for OS detection are just a guess
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_NET_PROBE 97771

/**
 *	@brief Will scan incoming packets for network information
 *	@ingroup waapi_methods
 *
 *	@param[in] interface_id:<string> interface_id to specify interface on which to listen. By default method tries to pick out the active configured ethernet or wifi network.
 *	@param[in] no_of_packets:<number> Number of packets to capture and process.
 *	@param[in] trace:<boolean> Boolean indicating whether to start netsh trace (Requires admin privilage).
 *	@param[in] resolve_dns:<boolean> Boolean indicating whether to resolve dns for each ip/ipv6. NOTE: ENABLING THIS MAY CAUSE THIS MACHINE TO ACTIVELY SEND OUT PACKETS. MAY CAUSE CONSIDERABLE SLOW DOWN ALSO!
 *	@param[in] options:<array<string>> Array of options strings that can be passed to method.
 *	@param[out] count:<number> Count of detected ipv4 and ipv6 addresses.
 *	@param[out] trace:<boolean> Boolean indicating whether netsh trace is running on the system.
 *	@param[out] ip_v4_list:<array<object>> List of detected ipv4 addresses.
 *	@param[out] ip_v4_list.ip_v4:<string> An ipv4 address.
 *	@param[out] ip_v4_list.mac:<string> A physical interface address.
 *	@param[out] ip_v4_list.dns:<array<string>> List of detected dns address strings associated with an ip address.
 *	@param[out] ip_v6_list:<array<object>> List of detected ipv6 addresses.
 *	@param[out] ip_v6_list.ip_v6:<string> An ipv6 address.
 *	@param[out] ip_v6_list.mac:<string> A physical interface address.
 *	@param[out] ip_v6_list.dns:<array<string>> List of detected dns address strings associated with an ipv6 address.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_NET_SNIFF 97772

/**
 *	@brief Will retrieve the stored network map and details
 *	@ingroup waapi_methods
 *
 *	@param[in] before_ts:<string> String representing a timestamp value. Fetches elements with timestamp less than or equal to this value.
 *	@param[in] after_ts:<string> String representing a timestamp value. Fetches elements with timestamp greater than or equal to this value.
 *	@param[in] before_init_ts:<string> String representing a timestamp value. Fetches elements with initial timestamp less than or equal to this value.
 *	@param[in] after_init_ts:<string> String representing a timestamp value. Fetches elements with initial timestamp greater than or equal to this value.
 *	@param[out] interface_list:<array<object>> A list of network interface objects
 *	@param[out] interface_list.timestamp:<string> An epoch timestamp indicating when this element was updated in the map
 *	@param[out] interface_list.interface_id:<string> A system generated interface id
 *	@param[out] interface_list.interface:<string> The interface name
 *	@param[out] interface_list.interface_desc:<string> The interface description
 *	@param[out] interface_list.type:<string> The type of the network interface
 *	@param[out] interface_list.connected:<boolean> Whether the network interface is connected to a network (up:true or down:false)
 *	@param[out] interface_list.down_speed_kbps:<number> downstream speed
 *	@param[out] interface_list.up_speed_kbps:<number> upstream speed
 *	@param[out] interface_list.mtu:<number> mtu: maximum transmission unit size bytes
 *	@param[out] interface_list.primary_dns_suffix:<string> primary dns suffix
 *	@param[out] interface_list.dynamic_dns_enabled:<boolean> True if dynamic DNS is enabled
 *	@param[out] interface_list.dhcp_enabled:<boolean> True if DHCP is enabled
 *	@param[out] interface_list.netbios_over_tcpip_enabled:<boolean> True if Netbios over TCP/IP is enabled
 *	@param[out] interface_list.ipv4_enabled:<boolean> True if ipv4 is enabled
 *	@param[out] interface_list.ipv6_enabled:<boolean> True if ipv6 is enabled
 *	@param[out] interface_list.secondary_ipv6:<array<string>> An ordered array of ipv6 addresses. Present if multiple ipv6 addresses defined.
 *	@param[out] interface_list.ipv6_multicast:<string> An ipv6 multicast address
 *	@param[out] interface_list.secondary_ipv6_multicast:<array<string>> An ordered array of ipv6 addresses. Present if multiple ipv6 multicast addresses defined.
 *	@param[out] interface_list.ipv6_gateway:<string> An ipv6 gateway address
 *	@param[out] interface_list.secondary_ipv6_gateway:<array<string>> An ordered array of ipv6 gateway addresses. Present if multiple ipv6 gateways defined.
 *	@param[out] interface_list.ipv6_dns_server:<string> An ipv6 dns server address
 *	@param[out] interface_list.secondary_ipv6_dns_server:<array<string>> An ordered array of ipv6 dns server addresses. Present if multiple ipv6 dns server adddresses defined.
 *	@param[out] interface_list.dhcpv6_server:<string> A dhcpv6 server address.
 *	@param[out] interface_list.temp_ipv6:<string> A temporary ipv6 address
 *	@param[out] interface_list.link_local_ipv6:<string> A link local Ipv6 address
 *	@param[out] interface_list.dhcpv6_client_duid:<string> dhcpv6 client duid
 *	@param[out] interface_list.dhcpv6_iaid:<number> dhcpv6 iaid
 *	@param[out] interface_list.mask:<string> An ipv4 network mask
 *	@param[out] interface_list.secondary_mask:<array<string>> An ordered array of ipv4 network masks. Present if multiple ips/networks are defined.
 *	@param[out] interface_list.ipv4:<string> An ipv4 address
 *	@param[out] interface_list.secondary_ipv4:<array<string>> An ordered array of ipv4 addresses. Present if multiple ipv4 addresses are defined.
 *	@param[out] interface_list.ipv4_multicast:<string> An ipv4 multicast address
 *	@param[out] interface_list.secondary_ipv4_multicast:<array<string>> An ordered array of ipv4 addresses. Present if multiple ipv4 mutlicast addresses are defined.
 *	@param[out] interface_list.ipv4_gateway:<string> An ipv4 gateway address.
 *	@param[out] interface_list.secondary_ipv4_gateway:<array<string>> An ordered array of ipv4 gateway addresses. Present if multiple gateways are specified.
 *	@param[out] interface_list.ipv4_dns_server:<string> An ipv4 dns server address.
 *	@param[out] interface_list.secondary_ipv4_dns_server:<array<string>> An ordered array of ipv4 dns server addresses. Present if multiple dns servers are specified.
 *	@param[out] interface_list.dhcpv4_server:<string> A dhcpv4 server address.
 *	@param[out] interface_list.cidr:<string> An ipv4 network in cidr notation
 *	@param[out] interface_list.secondary_cidr:<array<string>> An ordered array of ipv4 network in cidr notation. Present if interface is attached to multiple networks.
 *	@param[out] ip_v4_net_list:<array<object>> A list of ipv4 networks.
 *	@param[out] ip_v4_net_list.ip_v4_net:<string> An ipv4 network in cidr notation.
 *	@param[out] ip_v4_net_list.connected:<boolean> Whether the network interface is connected to a network (up:true or down:false).
 *	@param[out] ip_v4_net_list.size:<number> Size of the network.
 *	@param[out] ip_v4_net_list.count:<number> Count of detected ipv4 addresses.
 *	@param[out] ip_v4_net_list.ip_v4_list:<array<object>> A list of ipv4 addresses.
 *	@param[out] ip_v4_net_list.ip_v4_list.timestamp:<string> An epoch timestamp indicating when this element was updated in the map
 *	@param[out] ip_v4_net_list.ip_v4_list.init_timestamp:<string> An epoch timestamp indicating when this element was first added to the map
 *	@param[out] ip_v4_net_list.ip_v4_list.ip_v4:<string> An ipv4 address.
 *	@param[out] ip_v4_net_list.ip_v4_list.mac:<string> A mac address.
 *	@param[out] ip_v4_net_list.interface_ids:<array<string>> A list of system generated interface IDs on which this network is present.
 *	@returns An @ref waapi_errorcodes 'error code'
 */
#define WAAPI_MID_NET_MAP 97773

/**
 *	@brief Executes a specific script given by the user, this will be loaded from the input json. The method is part of the debug module and user only internally.
 *	@ingroup waapi_methods
 *
 *	@param[in] script:<string> The script that will be executed. It is given in base64 format.
 *	@param[out] script_output:<object> The custom output of the script. The subkeys are unknown since every script has different output.
 *	@returns 
 */
#define WAAPI_MID_COMMON_EXECUTE_SCRIPT 1999

/**
 *	@brief Will enable/disable the Anti Keylogger. After 'enable' operation finished with success, a computer restart must be performed in order to activate the protection. The Anti Keylogger runs independently (even after computer restart/shutdown) from MetaDefender Endpoint Security SDK until 'disable' is called. The Anti Keylogger offers protection for a huge number of applications, the complete list is here: https://www.opswat.com/products/metadefender/endpoint-security-sdk/device-compliance/antimalware
 *	@ingroup waapi_methods
 *
 *	@param[in] operation:<string> The operation to be done. Should be 'enable', 'disable'.
 *	@returns 
 */
#define WAAPI_MID_SET_ANTI_KEYLOGGER_STATE 120001

/**
 *	@brief Will install the Anti Keylogger.
 *	@ingroup waapi_methods
 *
 *	@returns 
 */
#define WAAPI_MID_INSTALL_ANTI_KEYLOGGER 120002

/**
 *	@brief Will uninstall the Anti Keylogger. Anti Keylogger must be 'disabled' in order to uninstall it. In order the removal to finish completely, a computer restart must be performed. If the computer restart is not performed, the protection will still be disabled but some of the components will not be deleted until restart. The Anti Keylogger can be installed again only after the required restart.
 *	@ingroup waapi_methods
 *
 *	@returns 
 */
#define WAAPI_MID_UNINSTALL_ANTI_KEYLOGGER 120003

/**
 *	@brief Will determine if the Anti Keylogger is currently providing protection for the supported applications.
 *	@ingroup waapi_methods
 *
 *	@param[out] state:<string> The state of the Anti Keylogger. It could be one of the following values: 'installed', 'uninstalled', 'uninstalled (restart required)', 'enabled', 'enabled (restart required)', 'disabled'
 *	@returns 
 */
#define WAAPI_MID_GET_ANTI_KEYLOGGER_STATE 120004

/**
 *	@brief Will add or remove support for a specific process / all processes. The requested option will be available until the Anti Keylogger is uninstalled or until the process is intentionally removed from the temporary supported list.
 *	@ingroup waapi_methods
 *
 *	@param[in] operation:<string> The operation to be done. Possible values: 'add', 'remove' or 'clean'. 'add' will add temporary support for the given process_name or for all processes (if 'process_name' is empty). 'remove' will temporary remove support for the given process_name or for all processes( if 'process_name' is empty). 'clean' will clean the temporary supported list and will restore the support list to default.
 *	@param[in] process_name:<string> Name of the process (Eg: notepad.exe). If this field is empty and operation is 'remove', support will be temporary removed for all processes. If this field is empty and operation is 'add', support will be temporary removed for all processes. 'clean' operation does not require this field.
 *	@returns 
 */
#define WAAPI_MID_MANAGE_ANTI_KEYLOGGER_PROCESS 120005

/**
 *	@brief Will install the Anti ScreenCapture.
 *	@ingroup waapi_methods
 *
 *	@returns 
 */
#define WAAPI_MID_INSTALL_ANTI_SCREENCAPTURE 120010

/**
 *	@brief Will uninstall the Anti ScreenCapture.
 *	@ingroup waapi_methods
 *
 *	@returns 
 */
#define WAAPI_MID_UNINSTALL_ANTI_SCREENCAPTURE 120011

/**
 *	@brief Will determine if the Anti ScreenCapture is currently providing protection
 *	@ingroup waapi_methods
 *
 *	@param[out] enabled:<boolean> True if screen capture protection is enabled.
 *	@returns 
 */
#define WAAPI_MID_GET_ANTI_SCREENCAPTURE_STATE 120012

/**
 *	@brief Will enable/disable/allow/deny the Anti ScreenCapture processes
 *	@ingroup waapi_methods
 *
 *	@param[in] operation:<string> The operation to be done. Should be 'enable', 'disable', 'allow' or 'deny'.
 *	@param[in] process_id:<number> A process id used to identify the process. It also can be an array for multi-processes or empty for all processes
 *	@param[in] protect_copy_paste:<boolean> If true, will block Copy-Paste operations on the machine. Applies only in case of 'enable' operation. Default value is false.
 *	@returns 
 */
#define WAAPI_MID_MANAGE_ANTI_SCREENCAPTURE_PROCESS 120013

/**
 *	@brief Will update the dlp module license.
 *	@ingroup waapi_methods
 *
 *	@returns 
 */
#define WAAPI_MID_UPDATE_DLP_LICENSE 120020
