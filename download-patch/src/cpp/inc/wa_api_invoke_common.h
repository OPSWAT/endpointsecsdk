/****** THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT OR YOUR CHANGES WILL BE OVERWRITTEN! ******/
#pragma once
/**	@file wa_api_invoke_common.h
 *	@brief Defines component method identifiers for common product interface.
 *	@defgroup waapi_component_common Common
 */

/**
 *	@brief Will retrieve the version of the product. The product version returned will be as close to the version presented on the product's user interface. In some cases we are unable to determine the very minor versions of a product, in which case they will be omitted. If we are unable to determine the version of the product we will return L"0.0". If an error occurs while obtaining "architecture" information, the "error" key will be present in the "architecture"
 *	@ingroup waapi_component_common
 */
#define WAAPI_MID_COMMON_GET_VERSION 100

/**
 *	@brief Will check if the given product is running on the endpoint. The running state of the product does not refer to the products capabilities (such as an antivirus product's real-time protection). The running state simply refers to whether the product's process is running or active on the endpoint.
 *	@ingroup waapi_component_common
 */
#define WAAPI_MID_GET_RUNNING_STATE 101

/**
 *	@brief Will run the given product on the endpoint. This is the action is the same as if the user launched the product on the endpoint. In most cases, this will launch the product's user interface (if applicable) on the endpoint.
 *	@ingroup waapi_component_common
 */
#define WAAPI_MID_COMMON_RUN 102

/**
 *	@brief Will terminate the main process(es) for the given product. An effort will be made to try to stop the application gracefully. Permissions to terminate the product must exist otherwise a termination will not be possible. Will return WAAPI_OK if the product's process isn't running.
 *	@ingroup waapi_component_common
 */
#define WAAPI_MID_COMMON_TERMINATE 103

/**
 *	@brief Will retrieve important places where a product is installed. Will always contains the directory path in which the main exe resides. The paths will always end with the system file separator.
 *	@ingroup waapi_component_common
 */
#define WAAPI_MID_COMMON_GET_INSTALL_DIR 104

/**
 *	@brief Will retrieve the file paths of all files considered 'components' of an application. Usually, this is a set of .exe, .dll, and .sys files that represent the core of the product.
 *	@ingroup waapi_component_common
 */
#define WAAPI_MID_COMMON_GET_COMPONENTS 105

/**
 *	@brief Will return a product's uninstall string.
 *	@ingroup waapi_component_common
 */
#define WAAPI_MID_COMMON_GET_UNINSTALL_STRING 106

/**
 *	@brief Gets the labels for the product.
 *	@ingroup waapi_component_common
 */
#define WAAPI_MID_COMMON_MANAGE_LABELS 107

/**
 *	@brief Checks whether or not all binaries that are expected to be signed, are signed (i.e. the product is authentic). Details are provided to determine which binaries are checked and their signature status.
 *	@ingroup waapi_component_common
 */
#define WAAPI_MID_COMMON_IS_AUTHENTIC 108

/**
 *	@brief Will retrieve product information given a product signature.
 *	@ingroup waapi_component_common
 */
#define WAAPI_MID_COMMON_GET_PRODUCT_INFO 109
