<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="packages\rmt_curl.7.51.0\build\native\rmt_curl.props" Condition="Exists('packages\rmt_curl.7.51.0\build\native\rmt_curl.props')" />
  <Import Project="packages\rmt_libssh2.1.8.0.0\build\native\rmt_libssh2.props" Condition="Exists('packages\rmt_libssh2.1.8.0.0\build\native\rmt_libssh2.props')" />
  <Import Project="packages\rmt_openssl.1.1.0.3\build\native\rmt_openssl.props" Condition="Exists('packages\rmt_openssl.1.1.0.3\build\native\rmt_openssl.props')" />
  <Import Project="packages\rmt_zlib.1.2.8.7\build\native\rmt_zlib.props" Condition="Exists('packages\rmt_zlib.1.2.8.7\build\native\rmt_zlib.props')" />
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{d3a36017-73b7-4c84-8c95-aa9b197a7da5}</ProjectGuid>
    <RootNamespace>applypatch</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
    <ProjectName>download-patch</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions);CURL_STATICLIB</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(ProjectDir)\packages\rmt_curl.7.51.0\build\native\include\v140\x64\Release\static;$(ProjectDir)\packages\nlohmann.json.3.11.2\build\native\include\nlohmann;$(ProjectDir)\inc;$(ProjectDir)\packages\rmt_openssl.1.1.0.3\build\native\include\v140\x64\Release\static;$(ProjectDir)\packages\rmt_openssl.1.1.0.3\build\native\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(ProjectDir)\lib;$(ProjectDir)\packages\rmt_zlib.1.2.8.7\build\native\lib\v140\x64\Release\static;$(ProjectDir)\packages\rmt_openssl.1.1.0.3\build\native\lib\v140\x64\Release\static;$(ProjectDir)\packages\rmt_libssh2.1.8.0.0\build\native\lib\v140\x64\Release\static;$(ProjectDir)\packages\rmt_curl.7.51.0\build\native\lib\v140\x64\Release\static;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libwaapi.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>copy "$(ProjectDir)\dll\*" "$(OutputPath)"
copy "$(ProjectDir)\dat\*" "$(OutputPath)"
copy "$(ProjectDir)\license\*" "$(OutputPath)"

	  </Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>
      </Command>
    </PreBuildEvent>
    <PreLinkEvent>
      <Command>
      </Command>
    </PreLinkEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions);CURL_STATICLIB</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(ProjectDir)\packages\rmt_curl.7.51.0\build\native\include\v140\x64\Release\static;$(ProjectDir)\packages\nlohmann.json.3.11.2\build\native\include\nlohmann;$(ProjectDir)\inc;$(ProjectDir)\packages\rmt_openssl.1.1.0.3\build\native\include\v140\x64\Release\static;$(ProjectDir)\packages\rmt_openssl.1.1.0.3\build\native\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(ProjectDir)\lib;$(ProjectDir)\packages\rmt_zlib.1.2.8.7\build\native\lib\v140\x64\Release\static;$(ProjectDir)\packages\rmt_openssl.1.1.0.3\build\native\lib\v140\x64\Release\static;$(ProjectDir)\packages\rmt_libssh2.1.8.0.0\build\native\lib\v140\x64\Release\static;$(ProjectDir)\packages\rmt_curl.7.51.0\build\native\lib\v140\x64\Release\static;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libwaapi.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>copy "$(ProjectDir)\dll\*" "$(OutputPath)"
copy "$(ProjectDir)\dat\*" "$(OutputPath)"
copy "$(ProjectDir)\license\*" "$(OutputPath)"

	  </Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>
      </Command>
    </PreBuildEvent>
    <PreLinkEvent>
      <Command>
      </Command>
    </PreLinkEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions);CURL_STATICLIB</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(ProjectDir)\packages\rmt_curl.7.51.0\build\native\include\v140\x64\Release\static;$(ProjectDir)\packages\nlohmann.json.3.11.2\build\native\include\nlohmann;$(ProjectDir)\inc;$(ProjectDir)\packages\rmt_openssl.1.1.0.3\build\native\include\v140\x64\Release\static;$(ProjectDir)\packages\rmt_openssl.1.1.0.3\build\native\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(ProjectDir)\lib;$(ProjectDir)\packages\rmt_zlib.1.2.8.7\build\native\lib\v140\x64\Release\static;$(ProjectDir)\packages\rmt_openssl.1.1.0.3\build\native\lib\v140\x64\Release\static;$(ProjectDir)\packages\rmt_libssh2.1.8.0.0\build\native\lib\v140\x64\Release\static;$(ProjectDir)\packages\rmt_curl.7.51.0\build\native\lib\v140\x64\Release\static;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libwaapi.lib;crypt32.lib;libcrypto.lib;libssl.lib;zlibstat.lib;libssh2.lib;ws2_32.lib;libcurl.lib;wldap32.lib;advapi32.lib;kernel32.lib;comdlg32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>copy "$(ProjectDir)\dll\*" "$(OutputPath)"
copy "$(ProjectDir)\dat\*" "$(OutputPath)"
copy "$(ProjectDir)\license\*" "$(OutputPath)"

	  </Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>
      </Command>
    </PreBuildEvent>
    <PreLinkEvent>
      <Command>
      </Command>
    </PreLinkEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions);CURL_STATICLIB</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(ProjectDir)\packages\rmt_curl.7.51.0\build\native\include\v140\x64\Release\static;$(ProjectDir)\packages\nlohmann.json.3.11.2\build\native\include\nlohmann;$(ProjectDir)\inc;$(ProjectDir)\packages\rmt_openssl.1.1.0.3\build\native\include\v140\x64\Release\static;$(ProjectDir)\packages\rmt_openssl.1.1.0.3\build\native\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(ProjectDir)\lib;$(ProjectDir)\packages\rmt_zlib.1.2.8.7\build\native\lib\v140\x64\Release\static;$(ProjectDir)\packages\rmt_openssl.1.1.0.3\build\native\lib\v140\x64\Release\static;$(ProjectDir)\packages\rmt_libssh2.1.8.0.0\build\native\lib\v140\x64\Release\static;$(ProjectDir)\packages\rmt_curl.7.51.0\build\native\lib\v140\x64\Release\static;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libwaapi.lib;crypt32.lib;libcrypto.lib;libssl.lib;zlibstat.lib;libssh2.lib;ws2_32.lib;libcurl.lib;wldap32.lib;advapi32.lib;kernel32.lib;comdlg32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>copy "$(ProjectDir)\dll\*" "$(OutputPath)"
copy "$(ProjectDir)\dat\*" "$(OutputPath)"
copy "$(ProjectDir)\license\*" "$(OutputPath)"

	  </Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>
      </Command>
    </PreBuildEvent>
    <PreLinkEvent>
      <Command>
      </Command>
    </PreLinkEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="Applier.cpp" />
    <ClCompile Include="CheckHash.cpp" />
    <ClCompile Include="Download.cpp" />
    <ClCompile Include="main.cpp" />
    <ClCompile Include="OESIS.cpp" />
    <ClCompile Include="Utils.cpp" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="Applier.h" />
    <ClInclude Include="CheckHash.h" />
    <ClInclude Include="Download.h" />
    <ClInclude Include="OESIS.h" />
    <ClInclude Include="Utils.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="packages\rmt_zlib.1.2.8.7\build\native\rmt_zlib.targets" Condition="Exists('packages\rmt_zlib.1.2.8.7\build\native\rmt_zlib.targets')" />
    <Import Project="packages\rmt_openssl.1.1.0.3\build\native\rmt_openssl.targets" Condition="Exists('packages\rmt_openssl.1.1.0.3\build\native\rmt_openssl.targets')" />
    <Import Project="packages\rmt_libssh2.1.8.0.0\build\native\rmt_libssh2.targets" Condition="Exists('packages\rmt_libssh2.1.8.0.0\build\native\rmt_libssh2.targets')" />
    <Import Project="packages\rmt_curl.7.51.0\build\native\rmt_curl.targets" Condition="Exists('packages\rmt_curl.7.51.0\build\native\rmt_curl.targets')" />
    <Import Project="packages\nlohmann.json.3.11.2\build\native\nlohmann.json.targets" Condition="Exists('packages\nlohmann.json.3.11.2\build\native\nlohmann.json.targets')" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('packages\rmt_zlib.1.2.8.7\build\native\rmt_zlib.props')" Text="$([System.String]::Format('$(ErrorText)', 'packages\rmt_zlib.1.2.8.7\build\native\rmt_zlib.props'))" />
    <Error Condition="!Exists('packages\rmt_zlib.1.2.8.7\build\native\rmt_zlib.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\rmt_zlib.1.2.8.7\build\native\rmt_zlib.targets'))" />
    <Error Condition="!Exists('packages\rmt_openssl.1.1.0.3\build\native\rmt_openssl.props')" Text="$([System.String]::Format('$(ErrorText)', 'packages\rmt_openssl.1.1.0.3\build\native\rmt_openssl.props'))" />
    <Error Condition="!Exists('packages\rmt_openssl.1.1.0.3\build\native\rmt_openssl.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\rmt_openssl.1.1.0.3\build\native\rmt_openssl.targets'))" />
    <Error Condition="!Exists('packages\rmt_libssh2.1.8.0.0\build\native\rmt_libssh2.props')" Text="$([System.String]::Format('$(ErrorText)', 'packages\rmt_libssh2.1.8.0.0\build\native\rmt_libssh2.props'))" />
    <Error Condition="!Exists('packages\rmt_libssh2.1.8.0.0\build\native\rmt_libssh2.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\rmt_libssh2.1.8.0.0\build\native\rmt_libssh2.targets'))" />
    <Error Condition="!Exists('packages\rmt_curl.7.51.0\build\native\rmt_curl.props')" Text="$([System.String]::Format('$(ErrorText)', 'packages\rmt_curl.7.51.0\build\native\rmt_curl.props'))" />
    <Error Condition="!Exists('packages\rmt_curl.7.51.0\build\native\rmt_curl.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\rmt_curl.7.51.0\build\native\rmt_curl.targets'))" />
    <Error Condition="!Exists('packages\nlohmann.json.3.11.2\build\native\nlohmann.json.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\nlohmann.json.3.11.2\build\native\nlohmann.json.targets'))" />
  </Target>
</Project>