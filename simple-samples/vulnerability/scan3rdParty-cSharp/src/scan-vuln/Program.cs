///////////////////////////////////////////////////////////////////////////////////////////////
///  Sample Code for scan-vuln
///  Reference Implementation using OPSWAT Endpoint Vulnerability Module
///  
///  Created by Chris Seiler
///  OPSWAT OEM Solutions Architect
///////////////////////////////////////////////////////////////////////////////////////////////

using scan_vuln.sdk_pipe;
using System;
using System.Collections.Generic;

namespace scan_vuln
{
    class Program
    {

        public static void PerformScan()
        {
            string json_result = "";
            try
            {
                // Setup the default initialization
                SDK_Pipe.InitializeFramework();

                Console.WriteLine("Scanning for Windows Vulnerabilities using Offline Catalog...");

                // Scan the different patches
                List<CVEDetail> patchList = new List<CVEDetail>();

                ScanOfflineWindows.ScanPatches(patchList);

                foreach (CVEDetail patchDetail in patchList)
                {
                    string severity = patchDetail.severity;
                    severity = severity.ToUpper();
                    severity = severity.PadRight(10, ' ');

                    Console.WriteLine(patchDetail.id + " " + severity + " " + patchDetail.title);
                }

                SDK_Pipe.Teardown();

                Console.WriteLine("Found " + patchList.Count + " Vulnerabilities.");
            }
            catch (Exception e)
            {
                Console.Out.WriteLine("Received an Exception: " + e);
                Console.Out.WriteLine("JSON_RESULT: " + json_result);
            }
        }

        static void Main(string[] args)
        {
            PerformScan();
        }
    }
}
